{"version":3,"sources":["webpack:///./src/m-table-action.js","webpack:///./src/m-table-actions.js","webpack:///./src/m-table-body.js","webpack:///./src/m-table-body-row.js","webpack:///./src/m-table-groupbar.js","webpack:///./src/m-table-group-row.js","webpack:///./src/m-table-cell.js","webpack:///./src/form/form-field.js","webpack:///./src/m-table-edit-row.js","webpack:///./src/m-table-filter-row.js","webpack:///./src/m-table-header.js","webpack:///./src/m-table-pagination.js","webpack:///./src/m-table-stepped-pagination.js","webpack:///./src/m-table-toolbar.js","webpack:///./src/utils/data-manager.js","webpack:///./src/material-table.js"],"names":["MTableAction","_this","this","action","props","data","handleOnClick","event","onClick","stopPropagation","button","react","icon","index_es","color","disabled","Object","assign","iconProps","fontSize","tooltip","title","React","defaultProps","MTableActions","actions","map","index","components","Action","key","MTableBody","emptyRowCount","renderData","localization","objectSpread_default","options","showEmptyDataSourceMessage","length","addColumn","selection","filter","a","isFreeAction","hasDetailPanel","style","height","paging","emptyRowsWhenPaging","pageSize","paddingTop","paddingBottom","textAlign","colSpan","columns","emptyDataSourceMessage","toConsumableArray_default","Array","r","_this2","tableData","editing","EditRow","columnDef","hidden","icons","editRow","mode","detailPanel","onEditingCanceled","onEditingApproved","Row","level","onRowSelected","getFieldValue","path","currentPage","onToggleDetailPanel","onRowClick","isTreeData","onTreeExpandChanged","hasAnyEditingRow","groups","_this3","groupData","GroupRow","value","onGroupExpandChanged","_this4","col","groupOrder","sort","col1","col2","filtering","FilterRow","emptyCell","hasActions","actionsColumnIndex","onFilterChanged","onFilterSelectionChanged","filterRow","renderGroupedRows","renderUngroupedRows","showAddRow","renderEmpty","MTableBodyRow","isOpen","transform","Cell","id","rowData","padding","width","display","Actions","checked","e","toString","onChange","paddingLeft","_this5","CustomIcon","_ref","transition","rotateIconStyle","showDetailPanel","DetailPanel","panel","render","iconButton","animation","openIcon","rowStyle","cursor","opacity","_this6","renderColumns","splice","renderSelectionColumn","push","renderActions","endPos","childRows","marginLeft","isTreeExpanded","renderDetailPanelColumn","forEach","_this$props","rowProps","objectWithoutProperties_default","selected","hover","getStyle","panelIndex","isArray","concat","MTableGroupbar","classCallCheck_default","possibleConstructorReturn_default","getPrototypeOf_default","call","defineProperty_default","assertThisInitialized_default","isDragging","draggableStyle","userSelect","margin","isDraggingOver","background","overflow","border","borderStyle","state","minHeight","react_beautiful_dnd_esm","droppableId","direction","placeholder","provided","snapshot","ref","innerRef","getListStyle","groupColumns","variant","groupedBy","draggableId","draggableProps","dragHandleProps","getItemStyle","onSortChanged","label","float","groupSort","SortArrow","boxShadow","textTransform","onDelete","onGroupRemoved","MTableGroupRow","detail","column","isExpanded","freeCells","i","lookup","undefined","emptyValue","MTableCell","disableClick","cellStyle","getEmptyValue","type","Check","ThirdStateCheck","Date","toLocaleDateString","toLocaleTimeString","toLocaleString","getCurrencyValue","currencySetting","Intl","NumberFormat","locale","currency","currencyCode","minimumFractionDigits","maximumFractionDigits","format","cellProps","align","indexOf","handleClickCell","children","getRenderValue","FormField","target","keys","material_ui_pickers_esm","utils","DateFnsUtils","clearable","InputProps","renderLookupField","renderBooleanField","renderDateField","renderTimeField","renderDateTimeField","renderCurrencyField","renderTextField","MTableEditRow","JSON","parse","stringify","field","readonly","form_field","setState","saveTooltip","Clear","cancelTooltip","borderBottom","deleteText","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","MTableFilterRow","multiple","filterValue","input","renderValue","selecteds","join","primary","indeterminate","val","startAdornment","position","filterTooltip","Filter","dateInputElement","onDateInputChange","date","customFilterAndSearch","renderLookupFilter","renderBooleanFilter","includes","renderDateTypeFilter","renderDefaultFilter","getComponentForColumn","MTableHeader","_React$Component","apply","arguments","inherits_default","createClass_default","className","classes","header","headerStyle","sorting","active","orderBy","orderDirection","onOrderChange","grouping","isDragDisabled","showSelectAllCheckbox","selectedCount","dataCount","onAllSelected","headers","renderHeader","hasSelection","renderSelectionHeader","showActionsColumn","actionsHeaderIndex","renderActionsHeader","withStyles","theme","top","zIndex","backgroundColor","palette","paper","MTablePaginationInner","onChangePage","page","Math","max","ceil","count","rowsPerPage","root","firstTooltip","handleFirstPageButtonClick","aria-label","firstAriaLabel","LastPage","FirstPage","previousTooltip","handleBackButtonClick","previousAriaLabel","NextPage","PreviousPage","flex","lineHeight","labelDisplayedRows","replace","min","nextTooltip","handleNextButtonClick","nextAriaLabel","lastTooltip","handleLastPageButtonClick","lastAriaLabel","labelRowsPerPage","MTablePagination","flexShrink","text","secondary","withTheme","number","maxPages","smDown","handleNumberButtonClick","spacing","unit","MTableToolbar","export","CsvBuilder","exportFileName","setDelimeter","exportDelimiter","setColumns","addRows","exportFile","exportCsv","defaultExportCsv","exportButtonAnchorEl","columnsButtonAnchorEl","search","searchFieldAlignment","showTitle","searchField","searchText","onSearchChanged","searchTooltip","Search","endAdornment","ResetSearch","searchFieldStyle","columnsButton","showColumnsTitle","currentTarget","showColumnsAriaLabel","ViewColumn","anchorEl","open","Boolean","onClose","fontWeight","addRemoveColumns","removable","control","onColumnsChanged","exportButton","exportTitle","exportAriaLabel","Export","exportName","renderSearch","selectedRows","renderSelectedActions","renderDefaultActions","nRowsSelected","classNames","highlight","toolbarButtonAlignment","spacer","paddingRight","main","lighten","light","dark","DataManager","isDataType","reduce","result","current","byString","filtered","filterData","searched","searchData","grouped","treefied","treefyData","sorted","sortData","paged","pageData","sortedData","lastEditingRow","originalData","pagedData","treefiedDataLength","filteredData","applyFilters","row","currentDate","selectedDate","currentDateToCompare","selectedDateToCompare","formatDate","currentHour","selectedHour","toUpperCase","searchedData","applySearch","searchable","some","defaultFilter","defaultGroupOrder","defaultGroupSort","expanded","defaultExpanded","parentFunc","columnId","filterSelectionChecked","findDataByPath","checkChildRows","childRow","detailPanelType","lastDetailPanelRow","setCheck","element","d","groupedData","find","c","start","destination","source","end","slice","last","pop","unshift","shift","newGroup","o","s","split","n","x","dataType","b","list","_","customSort","tmpData","subData","object","colDef","group","g","oldGroup","findGroupByGroupPath","treefiedData","addRow","parent","_this7","sortGroups","sortGroupData","sortList","sortTree","item","startIndex","endIndex","MaterialTable","onSelectionChange","findSelecteds","_this$props2","onChangeRowsPerPage","_this$props3","query","isLoading","then","totalCount","dataManager","setData","getRenderState","debounce","changeSearchText","isRemoteData","onQueryChange","debounceInterval","filters","operator","calculatedProps","getProps","setDataManagerFields","isInit","defaultSortColumnIndex","defaultSortDirection","findIndex","defaultSort","setDefaultExpanded","changeApplySearch","changeApplyFilters","changeCurrentPage","initialPage","changePageSize","changeOrder","changePaging","changeParentFunc","parentChildData","changeDetailPanelType","nextProps","body","editable","onRowAdd","Add","addTooltip","changeRowEditing","onRowUpdate","Edit","editTooltip","onRowDelete","Delete","deleteTooltip","pagination","Pagination","paginationRoot","toolbar","paginationToolbar","caption","paginationCaption","selectRoot","paginationSelectRoot","overflowX","rowsPerPageOptions","pageSizeOptions","SelectProps","labelRowsSelect","ActionsComponent","subProps","paginationType","m_table_pagination","m_table_stepped_pagination","from","to","onDragEnd","changeByDrag","Container","Toolbar","onSearchChange","changeColumnHidden","Groupbar","groupedColumn","changeGroupOrder","combine","reason","material_table_ScrollBar","double","doubleHorizontalScroll","maxBodyHeight","overflowY","Header","changeAllSelected","Body","changeFilterValue","onFilterChange","changeFilterSelectionChecked","changeRowSelected","changeDetailPanelVisibility","changeGroupExpand","changeTreeExpand","newData","oldData","catch","loadingType","left","renderFooter","verticalAlign","ScrollBar","DoubleScrollbar_default","Paper","TablePagination","material_table_MaterialTable","tableRef"],"mappings":"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","file":"static/js/docz-examples-01-example-basic~docz-examples-02-example-column-types~docz-examples-03-example-action~ff3dd4d6.c2287359.js","sourcesContent":["/* eslint-disable no-unused-vars */\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Icon, IconButton, Tooltip } from '@material-ui/core';\r\n/* eslint-enable no-unused-vars */\r\n\r\nclass MTableAction extends React.Component {\r\n  render() {\r\n    let action = this.props.action;\r\n    if (typeof action === 'function') {\r\n      action = action(this.props.data);\r\n      if (!action) {\r\n        return null;\r\n      }\r\n    }\r\n\r\n    const handleOnClick = event => {\r\n      if (action.onClick) {\r\n        action.onClick(event, this.props.data);\r\n        event.stopPropagation();\r\n      }\r\n    };\r\n\r\n    const button = (\r\n      <span>\r\n\r\n          {typeof action.icon === \"string\" ? (\r\n            <IconButton\r\n              color=\"inherit\"\r\n              disabled={action.disabled}\r\n              onClick={(event) => handleOnClick(event)}\r\n            >\r\n              <Icon {...action.iconProps} fontSize=\"small\">{action.icon}</Icon>\r\n            </IconButton>\r\n          ) : (\r\n            <action.icon\r\n              {...action.iconProps}\r\n              disabled={action.disabled}\r\n              onClick={(event) => handleOnClick(event)}\r\n            />\r\n           )\r\n          }\r\n\r\n      </span>\r\n    );\r\n\r\n    if (action.tooltip) {\r\n      return <Tooltip title={action.tooltip}>{button}</Tooltip>;\r\n    } else {\r\n      return button;\r\n    }\r\n  }\r\n}\r\n\r\nMTableAction.defaultProps = {\r\n  action: {},\r\n  data: {}\r\n};\r\n\r\nMTableAction.propTypes = {\r\n  action: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\r\n  data: PropTypes.oneOfType([PropTypes.object, PropTypes.arrayOf(PropTypes.object)]),\r\n};\r\n\r\nexport default MTableAction;\r\n","/* eslint-disable no-unused-vars */\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\n/* eslint-enable no-unused-vars */\r\n\r\nclass MTableActions extends React.Component {\r\n\r\n  render() {\r\n    if (this.props.actions) {\r\n      return this.props.actions.map((action, index) => <this.props.components.Action action={action} key={\"action-\" + index} data={this.props.data}/>);\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n\r\nMTableActions.defaultProps = {  \r\n  actions: [],\r\n  data: {}\r\n};\r\n\r\nMTableActions.propTypes = {\r\n  components: PropTypes.object.isRequired,\r\n  actions: PropTypes.array.isRequired,\r\n  data: PropTypes.oneOfType([PropTypes.object, PropTypes.arrayOf(PropTypes.object)])\r\n};\r\n\r\nexport default MTableActions;\r\n","/* eslint-disable no-unused-vars */\r\nimport { TableBody, TableCell, TableRow } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\n/* eslint-enable no-unused-vars */\r\n\r\nclass MTableBody extends React.Component {\r\n  renderEmpty(emptyRowCount, renderData) {\r\n    const localization = { ...MTableBody.defaultProps.localization, ...this.props.localization };\r\n    if (this.props.options.showEmptyDataSourceMessage && renderData.length === 0) {\r\n      let addColumn = 0;\r\n      if (this.props.options.selection || (this.props.actions && this.props.actions.filter(a => !a.isFreeAction && !this.props.options.selection).length > 0)) {\r\n        addColumn++;\r\n      }\r\n      if(this.props.hasDetailPanel) {\r\n        addColumn++;\r\n      }\r\n      return (\r\n        <TableRow style={{ height: 49 * (this.props.options.paging && this.props.options.emptyRowsWhenPaging ? this.props.pageSize : 1) }} key={'empty-' + 0} >\r\n          <TableCell style={{ paddingTop: 0, paddingBottom: 0, textAlign: 'center' }} colSpan={this.props.columns.length + addColumn} key=\"empty-\">\r\n            {localization.emptyDataSourceMessage}\r\n          </TableCell>\r\n        </TableRow>\r\n      );\r\n    } else if (this.props.options.emptyRowsWhenPaging) {\r\n      return (\r\n        <React.Fragment>\r\n          {[...Array(emptyRowCount)].map((r, index) => <TableRow style={{ height: 49 }} key={'empty-' + index} />)}\r\n          {emptyRowCount > 0 && <TableRow style={{ height: 1 }} key={'empty-last1'} />}\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  }\r\n\r\n  renderUngroupedRows(renderData) {\r\n    return renderData.map((data, index) => {\r\n      if (data.tableData.editing) {\r\n        return (\r\n          <this.props.components.EditRow\r\n            columns={this.props.columns.filter(columnDef => { return !columnDef.hidden })}\r\n            components={this.props.components}\r\n            data={data}\r\n            icons={this.props.icons}\r\n            localization={{ ...MTableBody.defaultProps.localization.editRow, ...this.props.localization.editRow }}\r\n            key={index}\r\n            mode={data.tableData.editing}\r\n            options={this.props.options}\r\n            detailPanel={this.props.detailPanel}\r\n            onEditingCanceled={this.props.onEditingCanceled}\r\n            onEditingApproved={this.props.onEditingApproved}\r\n          />\r\n        );\r\n      }\r\n      else {\r\n        return (\r\n          <this.props.components.Row\r\n            components={this.props.components}\r\n            icons={this.props.icons}\r\n            data={data}\r\n            index={index}\r\n            key={index}\r\n            level={0}\r\n            options={this.props.options}\r\n            onRowSelected={this.props.onRowSelected}\r\n            actions={this.props.actions}\r\n            columns={this.props.columns}\r\n            getFieldValue={this.props.getFieldValue}\r\n            detailPanel={this.props.detailPanel}\r\n            path={[index + this.props.pageSize * this.props.currentPage]}\r\n            onToggleDetailPanel={this.props.onToggleDetailPanel}\r\n            onRowClick={this.props.onRowClick}\r\n            isTreeData={this.props.isTreeData}\r\n            onTreeExpandChanged={this.props.onTreeExpandChanged}\r\n            onEditingCanceled={this.props.onEditingCanceled}\r\n            onEditingApproved={this.props.onEditingApproved}\r\n            hasAnyEditingRow={this.props.hasAnyEditingRow}\r\n          />\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  renderGroupedRows(groups, renderData) {\r\n    return renderData.map((groupData, index) => (\r\n      <this.props.components.GroupRow\r\n        actions={this.props.actions}\r\n        key={groupData.value || (\"\" + index)}\r\n        columns={this.props.columns}\r\n        components={this.props.components}\r\n        detailPanel={this.props.detailPanel}\r\n        getFieldValue={this.props.getFieldValue}\r\n        groupData={groupData}\r\n        groups={groups}\r\n        icons={this.props.icons}\r\n        level={0}\r\n        path={[index + this.props.pageSize * this.props.currentPage]}\r\n        onGroupExpandChanged={this.props.onGroupExpandChanged}\r\n        onRowSelected={this.props.onRowSelected}\r\n        onRowClick={this.props.onRowClick}\r\n        onEditingCanceled={this.props.onEditingCanceled}\r\n        onEditingApproved={this.props.onEditingApproved}\r\n        onToggleDetailPanel={this.props.onToggleDetailPanel}\r\n        onTreeExpandChanged={this.props.onTreeExpandChanged}\r\n        options={this.props.options}\r\n        isTreeData={this.props.isTreeData}\r\n        hasAnyEditingRow={this.props.hasAnyEditingRow}\r\n      />\r\n    ));\r\n  }\r\n\r\n  render() {\r\n    let renderData = this.props.renderData;\r\n    const groups = this.props.columns\r\n      .filter(col => col.tableData.groupOrder > -1)\r\n      .sort((col1, col2) => col1.tableData.groupOrder - col2.tableData.groupOrder);\r\n\r\n    let emptyRowCount = 0;\r\n    if (this.props.options.paging) {\r\n      emptyRowCount = this.props.pageSize - renderData.length;\r\n    }\r\n    return (\r\n      <TableBody>\r\n        {this.props.options.filtering &&\r\n          <this.props.components.FilterRow\r\n            columns={this.props.columns.filter(columnDef => { return !columnDef.hidden })}\r\n            icons={this.props.icons}\r\n            emptyCell={this.props.options.selection || (this.props.actions && this.props.actions.filter(a => !a.isFreeAction && !this.props.options.selection).length > 0)}\r\n            hasActions={(this.props.actions && this.props.actions.filter(a => !a.isFreeAction && !this.props.options.selection).length > 0)}\r\n            actionsColumnIndex={this.props.options.actionsColumnIndex}\r\n            onFilterChanged={this.props.onFilterChanged}\r\n            selection={this.props.options.selection}\r\n            onFilterSelectionChanged={this.props.onFilterSelectionChanged}\r\n            localization={{ ...MTableBody.defaultProps.localization.filterRow, ...this.props.localization.filterRow }}\r\n            hasDetailPanel={!!this.props.detailPanel}\r\n            isTreeData={this.props.isTreeData}\r\n          />\r\n        }\r\n        {groups.length > 0 ?\r\n          this.renderGroupedRows(groups, renderData) :\r\n          this.renderUngroupedRows(renderData)\r\n        }\r\n\r\n        {this.props.showAddRow &&\r\n          <this.props.components.EditRow\r\n            columns={this.props.columns.filter(columnDef => { return !columnDef.hidden })}\r\n            components={this.props.components}\r\n            icons={this.props.icons}\r\n            key=\"key-add-row\"\r\n            mode=\"add\"\r\n            localization={{ ...MTableBody.defaultProps.localization.editRow, ...this.props.localization.editRow }}\r\n            options={this.props.options}\r\n            detailPanel={this.props.detailPanel}\r\n            onEditingCanceled={this.props.onEditingCanceled}\r\n            onEditingApproved={this.props.onEditingApproved}\r\n          />\r\n        }\r\n        {this.renderEmpty(emptyRowCount, renderData)}\r\n      </TableBody>\r\n    );\r\n  }\r\n}\r\n\r\nMTableBody.defaultProps = {\r\n  actions: [],\r\n  currentPage: 0,\r\n  pageSize: 5,\r\n  renderData: [],\r\n  selection: false,\r\n  localization: {\r\n    emptyDataSourceMessage: 'No records to display',\r\n    filterRow: {},\r\n    editRow: {}\r\n  }\r\n};\r\n\r\nMTableBody.propTypes = {\r\n  actions: PropTypes.array,\r\n  components: PropTypes.object.isRequired,\r\n  columns: PropTypes.array.isRequired,\r\n  currentPage: PropTypes.number,\r\n  detailPanel: PropTypes.oneOfType([PropTypes.func, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.object, PropTypes.func]))]),\r\n  getFieldValue: PropTypes.func.isRequired,\r\n  hasAnyEditingRow: PropTypes.bool,\r\n  hasDetailPanel: PropTypes.bool.isRequired,\r\n  icons: PropTypes.object.isRequired,\r\n  isTreeData: PropTypes.bool.isRequired,\r\n  onRowSelected: PropTypes.func,\r\n  options: PropTypes.object.isRequired,\r\n  pageSize: PropTypes.number,\r\n  renderData: PropTypes.array,\r\n  selection: PropTypes.bool.isRequired,\r\n  showAddRow: PropTypes.bool,\r\n  onFilterSelectionChanged: PropTypes.func.isRequired,\r\n  localization: PropTypes.object,\r\n  onFilterChanged: PropTypes.func,\r\n  onGroupExpandChanged: PropTypes.func,\r\n  onToggleDetailPanel: PropTypes.func.isRequired,\r\n  onTreeExpandChanged: PropTypes.func.isRequired,\r\n  onRowClick: PropTypes.func,\r\n  onEditingCanceled: PropTypes.func,\r\n  onEditingApproved: PropTypes.func,\r\n};\r\n\r\nexport default MTableBody;\r\n","/* eslint-disable no-unused-vars */\r\nimport { Checkbox, TableCell, TableRow, IconButton, Icon, Tooltip } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\n/* eslint-enable no-unused-vars */\r\n\r\n\r\nexport default class MTableBodyRow extends React.Component {\r\n  renderColumns() {\r\n    const mapArr = this.props.columns.filter(columnDef => !columnDef.hidden && !(columnDef.tableData.groupOrder > -1))\r\n      .map((columnDef, index) => {\r\n        const value = this.props.getFieldValue(this.props.data, columnDef);\r\n        return (\r\n          <this.props.components.Cell\r\n            icons={this.props.icons}\r\n            columnDef={columnDef}\r\n            value={value}\r\n            key={columnDef.tableData.id}\r\n            rowData={this.props.data}\r\n          />\r\n        );\r\n      });\r\n    return mapArr;\r\n  }\r\n\r\n  renderActions() {\r\n    const actions = this.props.actions.filter(a => !a.isFreeAction && !this.props.options.selection);\r\n    return (\r\n      <TableCell padding=\"dense\" key=\"key-actions-column\" style={{ width: 48 * actions.length, padding: '0px 5px' }}>\r\n        <div style={{ display: 'flex' }}>\r\n          <this.props.components.Actions data={this.props.data} actions={actions} components={this.props.components} />\r\n        </div>\r\n      </TableCell>\r\n    );\r\n  }\r\n  renderSelectionColumn() {\r\n    return (\r\n      <TableCell padding=\"none\" key=\"key-selection-column\" style={{ width: 48 }}>\r\n        <Checkbox\r\n          checked={this.props.data.tableData.checked === true}\r\n          onClick={(e) => e.stopPropagation()}\r\n          value={this.props.data.tableData.id.toString()}\r\n          onChange={(event) => this.props.onRowSelected(event, this.props.path)}\r\n          style={{\r\n            paddingLeft: 12 + this.props.level * 20\r\n          }}\r\n        />\r\n      </TableCell>\r\n    );\r\n  }\r\n\r\n  rotateIconStyle = isOpen => ({\r\n    transform: isOpen ? 'rotate(90deg)' : 'none'\r\n  });\r\n\r\n  renderDetailPanelColumn() {\r\n\r\n    const CustomIcon = ({ icon, style }) => typeof icon === \"string\" ? <Icon style={style}>{icon}</Icon> : React.createElement(icon, { style });\r\n\r\n    if (typeof this.props.detailPanel == 'function') {\r\n      return (\r\n        <TableCell padding=\"none\" key=\"key-detail-panel-column\" style={{ width: 48, textAlign: 'center' }}>\r\n          <IconButton\r\n            style={{ transition: 'all ease 200ms', ...this.rotateIconStyle(this.props.data.tableData.showDetailPanel) }}\r\n            onClick={(event) => {\r\n              this.props.onToggleDetailPanel(this.props.path, this.props.detailPanel);\r\n              event.stopPropagation();\r\n            }}\r\n          >\r\n            <this.props.icons.DetailPanel />\r\n          </IconButton>\r\n        </TableCell>\r\n      );\r\n    }\r\n    else {\r\n      return (\r\n        <TableCell padding=\"none\" key=\"key-detail-panel-column\" style={{ width: 48 * this.props.detailPanel.length, textAlign: 'center' }}>\r\n          {this.props.detailPanel.map((panel, index) => {\r\n\r\n            if (typeof panel === \"function\") {\r\n              panel = panel(this.props.data);\r\n            }\r\n\r\n            const isOpen = this.props.data.tableData.showDetailPanel === panel.render;\r\n            let iconButton = <this.props.icons.DetailPanel />;\r\n            let animation = true;\r\n            if (isOpen) {\r\n              if (panel.openIcon) {\r\n                iconButton = <CustomIcon icon={panel.openIcon} />;\r\n                animation = false;\r\n              }\r\n              else if (panel.icon) {\r\n                iconButton = <CustomIcon icon={panel.icon} />;\r\n              }\r\n            }\r\n            else if (panel.icon) {\r\n              iconButton = <CustomIcon icon={panel.icon} />;\r\n              animation = false;\r\n            }\r\n\r\n            iconButton = (\r\n              <IconButton\r\n                key={\"key-detail-panel-\" + index}\r\n                style={{ transition: 'all ease 200ms', ...this.rotateIconStyle(animation && isOpen) }}\r\n                disabled={panel.disabled}\r\n                onClick={(event) => {\r\n                  this.props.onToggleDetailPanel(this.props.path, panel.render);\r\n                  event.stopPropagation();\r\n                }}\r\n              >\r\n                {iconButton}\r\n              </IconButton>);\r\n\r\n            if (panel.tooltip) {\r\n              iconButton = <Tooltip key={\"key-detail-panel-\" + index} title={panel.tooltip}>{iconButton}</Tooltip>;\r\n            }\r\n\r\n            return iconButton;\r\n          })}\r\n        </TableCell>\r\n      );\r\n    }\r\n  }\r\n\r\n  getStyle() {\r\n    let style = {       \r\n      transition: 'all ease 300ms',      \r\n    };\r\n\r\n    if (typeof this.props.options.rowStyle === \"function\") {\r\n      style = {\r\n        ...style,\r\n        ...this.props.options.rowStyle(this.props.data)\r\n      };\r\n    }\r\n    else if(this.props.options.rowStyle) {\r\n      style = {\r\n        ...style,\r\n        ...this.props.options.rowStyle\r\n      };\r\n    }\r\n\r\n    if (this.props.onRowClick) {\r\n      style.cursor = 'pointer';\r\n    }\r\n    \r\n    if(this.props.hasAnyEditingRow) {\r\n      style.opacity = 0.2;\r\n    }\r\n\r\n    return style;\r\n  }\r\n\r\n  render() {\r\n    const renderColumns = this.renderColumns();\r\n    if (this.props.options.selection) {\r\n      renderColumns.splice(0, 0, this.renderSelectionColumn());\r\n    }\r\n    if (this.props.actions && this.props.actions.filter(a => !a.isFreeAction && !this.props.options.selection).length > 0) {\r\n      if (this.props.options.actionsColumnIndex === -1) {\r\n        renderColumns.push(this.renderActions());\r\n      } else if (this.props.options.actionsColumnIndex >= 0) {\r\n        let endPos = 0;\r\n        if (this.props.options.selection) {\r\n          endPos = 1;\r\n        }\r\n        renderColumns.splice(this.props.options.actionsColumnIndex + endPos, 0, this.renderActions());\r\n      }\r\n    }\r\n\r\n    if (this.props.isTreeData) {\r\n      if (this.props.data.tableData.childRows && this.props.data.tableData.childRows.length > 0) {\r\n        renderColumns.splice(0, 0, (\r\n          <TableCell padding=\"none\" key={\"key-tree-data-column\"} style={{ width: 48 }}>\r\n            <IconButton\r\n              style={{\r\n                transition: 'all ease 200ms',\r\n                marginLeft: this.props.level * 20,\r\n                ...this.rotateIconStyle(this.props.data.tableData.isTreeExpanded)\r\n              }}\r\n              onClick={(event) => {\r\n                this.props.onTreeExpandChanged(this.props.path);\r\n                event.stopPropagation();\r\n              }}\r\n            >\r\n              <this.props.icons.DetailPanel />\r\n            </IconButton>\r\n          </TableCell>\r\n        ));\r\n      }\r\n      else {\r\n        renderColumns.splice(0, 0, <TableCell padding=\"none\" key={\"key-tree-data-column\"} />);\r\n      }\r\n    }\r\n\r\n    // Lastly we add detail panel icon\r\n    if (this.props.detailPanel) {\r\n      renderColumns.splice(0, 0, this.renderDetailPanelColumn());\r\n    }\r\n\r\n    this.props.columns\r\n      .filter(columnDef => columnDef.tableData.groupOrder > -1)\r\n      .forEach(columnDef => {\r\n        renderColumns.splice(0, 0, <TableCell padding=\"none\" key={\"key-group-cell\" + columnDef.tableData.id} />);\r\n      });\r\n\r\n    const { \r\n      icons,\r\n      data,\r\n      columns,\r\n      components,\r\n      detailPanel, \r\n      getFieldValue, \r\n      isTreeData, \r\n      onRowClick, \r\n      onRowSelected, \r\n      onTreeExpandChanged, \r\n      onToggleDetailPanel, \r\n      onEditingCanceled,\r\n      onEditingApproved,\r\n      options,\r\n      hasAnyEditingRow, \r\n      ...rowProps } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <TableRow\r\n          selected={hasAnyEditingRow}\r\n          {...rowProps}\r\n          hover={onRowClick ? true : false}\r\n          style={this.getStyle()}\r\n          onClick={(event) => {\r\n            onRowClick && onRowClick(event, this.props.data,\r\n              (panelIndex) => {\r\n                let panel = detailPanel;\r\n                if (Array.isArray(panel)) {\r\n                  panel = panel[panelIndex || 0].render;\r\n                }\r\n\r\n                onToggleDetailPanel(this.props.path, panel);\r\n              });\r\n          }}          \r\n        >\r\n          {renderColumns}\r\n        </TableRow>\r\n        {this.props.data.tableData.childRows && this.props.data.tableData.isTreeExpanded &&\r\n          this.props.data.tableData.childRows.map((data, index) => (\r\n            <this.props.components.Row\r\n              {...this.props}\r\n              data={data}\r\n              index={index}\r\n              key={index}\r\n              level={this.props.level + 1}\r\n              path={[...this.props.path, index]}\r\n              onEditingCanceled={onEditingCanceled}\r\n              onEditingApproved={onEditingApproved}\r\n              hasAnyEditingRow={this.props.hasAnyEditingRow}\r\n            />\r\n          ))\r\n        }\r\n        {this.props.data.tableData && this.props.data.tableData.showDetailPanel &&\r\n          <TableRow\r\n          // selected={this.props.index % 2 === 0}\r\n          >\r\n            <TableCell colSpan={renderColumns.length} padding=\"none\">\r\n              {this.props.data.tableData.showDetailPanel(this.props.data)}\r\n            </TableCell>\r\n          </TableRow>\r\n        }\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nMTableBodyRow.defaultProps = {\r\n  actions: [],\r\n  index: 0,\r\n  data: {},\r\n  options: {},\r\n  path: []\r\n};\r\n\r\nMTableBodyRow.propTypes = {\r\n  actions: PropTypes.array,\r\n  icons: PropTypes.any.isRequired,\r\n  index: PropTypes.number.isRequired,\r\n  data: PropTypes.object.isRequired,\r\n  detailPanel: PropTypes.oneOfType([PropTypes.func, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.object, PropTypes.func]))]),\r\n  hasAnyEditingRow: PropTypes.bool,\r\n  options: PropTypes.object.isRequired,\r\n  onRowSelected: PropTypes.func,\r\n  path: PropTypes.arrayOf(PropTypes.number),\r\n  getFieldValue: PropTypes.func.isRequired,\r\n  columns: PropTypes.array,\r\n  onToggleDetailPanel: PropTypes.func.isRequired,\r\n  onRowClick: PropTypes.func,\r\n  onEditingApproved: PropTypes.func,\r\n  onEditingCanceled: PropTypes.func,\r\n};\r\n","/* eslint-disable no-unused-vars */\r\nimport { Icon, Toolbar, Chip, Typography } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\r\n/* eslint-enable no-unused-vars */\r\n\r\n\r\nclass MTableGroupbar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  getItemStyle = (isDragging, draggableStyle) => ({\r\n    // some basic styles to make the items look a bit nicer\r\n    userSelect: 'none',\r\n    // padding: '8px 16px',\r\n    margin: `0 ${8}px 0 0`,\r\n\r\n    // change background colour if dragging\r\n    // background: isDragging ? 'lightgreen' : 'grey',\r\n\r\n    // styles we need to apply on draggables\r\n    ...draggableStyle,\r\n  });\r\n\r\n  getListStyle = isDraggingOver => ({\r\n    // background: isDraggingOver ? 'lightblue' : '#0000000a',\r\n    background: '#0000000a',\r\n    display: 'flex',\r\n    width: '100%',\r\n    padding: 8,\r\n    overflow: 'auto',\r\n    border: '1px solid #ccc',\r\n    borderStyle: 'dashed'\r\n  });\r\n\r\n  render() {\r\n    return (\r\n      <Toolbar style={{ padding: 0, minHeight: 'unset' }}>\r\n        <Droppable droppableId=\"groups\" direction=\"horizontal\" placeholder=\"Deneme\">\r\n          {(provided, snapshot) => (\r\n            <div\r\n              ref={provided.innerRef}\r\n              style={this.getListStyle(snapshot.isDraggingOver)}\r\n            >\r\n              {this.props.groupColumns.length > 0 &&\r\n                <Typography variant=\"caption\" style={{ padding: 8 }}>\r\n                  {this.props.localization.groupedBy}\r\n                </Typography>\r\n              }\r\n              {this.props.groupColumns.map((columnDef, index) => {\r\n                return (\r\n                  <Draggable\r\n                    key={columnDef.tableData.id}\r\n                    draggableId={columnDef.tableData.id.toString()}\r\n                    index={index}>\r\n                    {(provided, snapshot) => (\r\n                      <div\r\n                        ref={provided.innerRef}\r\n                        {...provided.draggableProps}\r\n                        {...provided.dragHandleProps}\r\n                        style={this.getItemStyle(snapshot.isDragging, provided.draggableProps.style)}\r\n                      >\r\n                        <Chip\r\n                          {...provided.dragHandleProps}\r\n                          onClick={() => this.props.onSortChanged(columnDef)}\r\n                          label={\r\n                            <div>\r\n                              <div style={{ float: 'left' }}>{columnDef.title}</div>\r\n                              {columnDef.tableData.groupSort &&\r\n                                <this.props.icons.SortArrow\r\n                                  style={{\r\n                                    transition: '300ms ease all',\r\n                                    transform: columnDef.tableData.groupSort === \"desc\" ? 'rotate(-180deg)' : 'none',\r\n                                    fontSize: 18\r\n                                  }}\r\n                                />\r\n                              }\r\n                            </div>\r\n                          }\r\n                          style={{ boxShadow: 'none', textTransform: 'none' }}\r\n                          variant=\"contained\"\r\n                          onDelete={() => this.props.onGroupRemoved(columnDef, index)}\r\n                        />\r\n                      </div>\r\n                    )}\r\n                  </Draggable>\r\n                );\r\n              })}\r\n              {this.props.groupColumns.length === 0 &&\r\n                <Typography variant=\"caption\" style={{ padding: 8 }}>\r\n                  {this.props.localization.placeholder}\r\n                </Typography>\r\n              }\r\n              {provided.placeholder}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      </Toolbar>\r\n    );\r\n  }\r\n}\r\n\r\nMTableGroupbar.defaultProps = {\r\n};\r\n\r\nMTableGroupbar.propTypes = {\r\n  localization: PropTypes.shape({\r\n    groupedBy: PropTypes.string,\r\n    placeholder: PropTypes.string\r\n  }),\r\n};\r\n\r\nexport default MTableGroupbar;\r\n","/* eslint-disable no-unused-vars */\r\nimport { TableCell, TableRow, IconButton } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\n/* eslint-enable no-unused-vars */\r\n\r\n\r\nexport default class MTableGroupRow extends React.Component {\r\n\r\n  rotateIconStyle = isOpen => ({\r\n    transform: isOpen ? 'rotate(90deg)' : 'none'\r\n  });\r\n\r\n  render() {\r\n    let colSpan = this.props.columns.filter(columnDef => !columnDef.hidden).length;\r\n    this.props.options.selection && colSpan++;    \r\n    this.props.detailPanel && colSpan++;\r\n    this.props.actions && this.props.actions.length > 0 && colSpan++;\r\n    const column = this.props.groups[this.props.level];\r\n\r\n    let detail;\r\n    if (this.props.groupData.isExpanded) {\r\n      if (this.props.groups.length > (this.props.level + 1)) { // Is there another group\r\n        detail = this.props.groupData.groups.map((groupData, index) => (\r\n          <this.props.components.GroupRow\r\n            actions={this.props.actions}\r\n            key={groupData.value || (\"\" + index)}\r\n            columns={this.props.columns}\r\n            components={this.props.components}\r\n            detailPanel={this.props.detailPanel}\r\n            getFieldValue={this.props.getFieldValue}\r\n            groupData={groupData}\r\n            groups={this.props.groups}            \r\n            icons={this.props.icons}\r\n            level={this.props.level + 1}\r\n            path={[...this.props.path, index]}\r\n            onGroupExpandChanged={this.props.onGroupExpandChanged}\r\n            onRowSelected={this.props.onRowSelected}\r\n            onRowClick={this.props.onRowClick}\r\n            onToggleDetailPanel={this.props.onToggleDetailPanel}\r\n            onTreeExpandChanged={this.props.onTreeExpandChanged}\r\n            onEditingCanceled={this.props.onEditingCanceled}\r\n            onEditingApproved={this.props.onEditingApproved}\r\n            options={this.props.options}\r\n            hasAnyEditingRow={this.props.hasAnyEditingRow}\r\n            isTreeData={this.props.isTreeData}\r\n          />\r\n        ));\r\n      }\r\n      else {\r\n        detail = this.props.groupData.data.map((rowData, index) => (\r\n          <this.props.components.Row\r\n            actions={this.props.actions}\r\n            key={index}\r\n            columns={this.props.columns}\r\n            components={this.props.components}\r\n            data={rowData}\r\n            detailPanel={this.props.detailPanel}\r\n            getFieldValue={this.props.getFieldValue}\r\n            icons={this.props.icons}\r\n            path={[...this.props.path, index]}\r\n            onRowSelected={this.props.onRowSelected}\r\n            onRowClick={this.props.onRowClick}\r\n            onToggleDetailPanel={this.props.onToggleDetailPanel}\r\n            options={this.props.options}\r\n            isTreeData={this.props.isTreeData}\r\n            onTreeExpandChanged={this.props.onTreeExpandChanged}\r\n            onEditingCanceled={this.props.onEditingCanceled}\r\n            onEditingApproved={this.props.onEditingApproved}\r\n            hasAnyEditingRow={this.props.hasAnyEditingRow}\r\n          />\r\n        ));\r\n      }\r\n    }\r\n\r\n    const freeCells = [];\r\n    for (let i = 0; i < this.props.level; i++) {\r\n      freeCells.push(<TableCell padding=\"checkbox\" />);\r\n    }\r\n\r\n    let value = this.props.groupData.value;\r\n    if(column.render) {\r\n      value = column.render(value, 'group');\r\n    }\r\n    else if (column.lookup) {\r\n      value = column.lookup[value];\r\n    }\r\n    if((value === undefined || value === null) && column.emptyValue) {\r\n      if (typeof column.emptyValue === 'function') {\r\n        value = column.emptyValue();\r\n      } else {\r\n        value = column.emptyValue;\r\n      }\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <TableRow>\r\n          {freeCells}\r\n          <this.props.components.Cell colSpan={colSpan} padding=\"none\" value={value}>\r\n            <IconButton\r\n              style={{ transition: 'all ease 200ms', ...this.rotateIconStyle(this.props.groupData.isExpanded) }}\r\n              onClick={(event) => {\r\n                this.props.onGroupExpandChanged(this.props.path);\r\n              }}\r\n            >\r\n              <this.props.icons.DetailPanel />\r\n            </IconButton>\r\n            <b>{column.title + \": \"}</b>            \r\n          </this.props.components.Cell>\r\n        </TableRow>\r\n        {detail}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nMTableGroupRow.defaultProps = {\r\n  columns: [],\r\n  groups: [],\r\n  options: {},\r\n  level: 0\r\n};\r\n\r\nMTableGroupRow.propTypes = {\r\n  actions: PropTypes.array,\r\n  columns: PropTypes.arrayOf(PropTypes.object),\r\n  components: PropTypes.object,\r\n  detailPanel: PropTypes.oneOfType([PropTypes.func, PropTypes.arrayOf(PropTypes.object)]),\r\n  getFieldValue: PropTypes.func,\r\n  groupData: PropTypes.object,\r\n  groups: PropTypes.arrayOf(PropTypes.object),\r\n  hasAnyEditingRow: PropTypes.bool,\r\n  icons: PropTypes.object,\r\n  isTreeData: PropTypes.bool.isRequired,\r\n  level: PropTypes.number,\r\n  onGroupExpandChanged: PropTypes.func,\r\n  onRowSelected: PropTypes.func,\r\n  onRowClick: PropTypes.func,  \r\n  onToggleDetailPanel: PropTypes.func.isRequired,\r\n  onTreeExpandChanged: PropTypes.func.isRequired,\r\n  onEditingCanceled: PropTypes.func,\r\n  onEditingApproved: PropTypes.func,\r\n  options: PropTypes.object,\r\n  path: PropTypes.arrayOf(PropTypes.number),\r\n};\r\n","/* eslint-disable no-unused-vars */\r\nimport * as React from 'react';\r\nimport { Icon, TableCell } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\n/* eslint-enable no-unused-vars */\r\n\r\nexport default class MTableCell extends React.Component {\r\n  getRenderValue() {\r\n    if (this.props.columnDef.emptyValue !== undefined && (this.props.value === undefined || this.props.value === null)) {\r\n      return this.getEmptyValue(this.props.columnDef.emptyValue);\r\n    }\r\n    if (this.props.columnDef.render) {\r\n      return this.props.columnDef.render(this.props.rowData, 'row');\r\n    } else if (this.props.columnDef.type === 'boolean') {\r\n      const style = { textAlign: 'left', width: '48px' };\r\n      if (this.props.value) {\r\n        return <this.props.icons.Check style={style} />;\r\n      } else {\r\n        return <this.props.icons.ThirdStateCheck style={style} />;\r\n      }\r\n    } else if (this.props.columnDef.type === 'date') {\r\n      if (this.props.value instanceof Date) {\r\n        return this.props.value.toLocaleDateString();\r\n      } else {\r\n        return this.props.value;\r\n      }\r\n    } else if (this.props.columnDef.type === 'time') {\r\n      if (this.props.value instanceof Date) {\r\n        return this.props.value.toLocaleTimeString();\r\n      } else {\r\n        return this.props.value;\r\n      }\r\n    } else if (this.props.columnDef.type === 'datetime') {\r\n      if (this.props.value instanceof Date) {\r\n        return this.props.value.toLocaleString();\r\n      } else {\r\n        return this.props.value;\r\n      }\r\n    } else if (this.props.columnDef.type === 'currency') {\r\n      return this.getCurrencyValue(this.props.columnDef.currencySetting, this.props.value);\r\n    }\r\n\r\n    return this.props.value;\r\n  }\r\n\r\n  getEmptyValue(emptyValue) {\r\n    if (typeof emptyValue === 'function') {\r\n      return this.props.columnDef.emptyValue(this.props.rowData);\r\n    } else {\r\n      return emptyValue;\r\n    }\r\n  }\r\n\r\n  getCurrencyValue(currencySetting, value) {\r\n    if (currencySetting !== undefined) {\r\n      return new Intl.NumberFormat((currencySetting.locale !== undefined) ? currencySetting.locale : 'en-US',\r\n        {\r\n          style: 'currency',\r\n          currency: (currencySetting.currencyCode !== undefined) ? currencySetting.currencyCode : 'USD',\r\n          minimumFractionDigits: (currencySetting.minimumFractionDigits !== undefined) ? currencySetting.minimumFractionDigits : 2,\r\n          maximumFractionDigits: (currencySetting.maximumFractionDigits !== undefined) ? currencySetting.maximumFractionDigits : 2\r\n        }).format((value !== undefined) ? value : 0);\r\n    } else {\r\n      return new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format((value !== undefined) ? value : 0);\r\n    }\r\n  }\r\n\r\n  handleClickCell = e => {\r\n    if (this.props.columnDef.disableClick) {\r\n      e.stopPropagation();\r\n    }\r\n  }\r\n\r\n  getStyle = () => {\r\n    let cellStyle = {};\r\n\r\n    if (typeof this.props.columnDef.cellStyle === 'function') {\r\n      cellStyle = { ...cellStyle, ...this.props.columnDef.cellStyle(this.props.value) };\r\n    } else {\r\n      cellStyle = { ...cellStyle, ...this.props.columnDef.cellStyle };\r\n    }\r\n\r\n    if (this.props.columnDef.disableClick) {\r\n      cellStyle.cursor = 'default';\r\n    }\r\n\r\n    return { ...this.props.style, ...cellStyle };\r\n  }\r\n\r\n  render() {\r\n\r\n    const { icons, columnDef, rowData, ...cellProps } = this.props;\r\n\r\n    return (\r\n      <TableCell\r\n        {...cellProps}\r\n        style={this.getStyle()}\r\n        align={['numeric'].indexOf(this.props.columnDef.type) !== -1 ? \"right\" : \"left\"}\r\n        onClick={this.handleClickCell}\r\n      >\r\n        {this.props.children}\r\n        {this.getRenderValue()}\r\n      </TableCell>\r\n    );\r\n  }\r\n}\r\n\r\nMTableCell.defaultProps = {\r\n  columnDef: {},\r\n  value: undefined\r\n};\r\n\r\nMTableCell.propTypes = {\r\n  columnDef: PropTypes.object.isRequired,\r\n  value: PropTypes.any,\r\n  rowData: PropTypes.object\r\n};\r\n","import * as React from 'react';\r\nimport { TextField, Checkbox, Select, MenuItem } from '@material-ui/core';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { MuiPickersUtilsProvider, TimePicker, DatePicker, DateTimePicker } from 'material-ui-pickers';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass FormField extends React.Component {\r\n\r\n  renderLookupField() {\r\n    return (\r\n      <Select\r\n        value={this.props.value || ''}\r\n        onChange={event => this.props.onChange(event.target.value)}\r\n        style={{\r\n          fontSize: 13,\r\n        }}\r\n      >\r\n        {Object.keys(this.props.columnDef.lookup).map(key => (\r\n          <MenuItem key={key} value={key}>{this.props.columnDef.lookup[key]}</MenuItem>)\r\n        )}\r\n      </Select>\r\n    );\r\n\r\n  }\r\n\r\n  renderBooleanField() {\r\n    return (\r\n      <Checkbox\r\n        checked={this.props.value}\r\n        onChange={event => this.props.onChange(event.target.checked)}\r\n        style={{\r\n          paddingLeft: 0,\r\n          paddingTop: 0,\r\n          paddingBottom: 0\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderDateField() {\r\n    return (\r\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n        <DatePicker\r\n          format=\"dd.MM.yyyy\"\r\n          value={this.props.value || null}\r\n          onChange={this.props.onChange}\r\n          clearable\r\n          InputProps={{\r\n            style: {\r\n              fontSize: 13,\r\n            }\r\n          }}\r\n        />\r\n      </MuiPickersUtilsProvider>\r\n    );\r\n  }\r\n\r\n  renderTimeField() {\r\n    return (\r\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n        <TimePicker\r\n          format=\"HH:mm:ss\"\r\n          value={this.props.value || null}\r\n          onChange={this.props.onChange}\r\n          clearable\r\n          InputProps={{\r\n            style: {\r\n              fontSize: 13,\r\n            }\r\n          }}\r\n        />\r\n      </MuiPickersUtilsProvider>\r\n    );\r\n  }\r\n\r\n  renderDateTimeField() {\r\n    return (\r\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n        <DateTimePicker\r\n          format=\"dd.MM.yyyy HH:mm:ss\"\r\n          value={this.props.value || null}\r\n          onChange={this.props.onChange}\r\n          clearable\r\n          InputProps={{\r\n            style: {\r\n              fontSize: 13,\r\n            }\r\n          }}\r\n        />\r\n      </MuiPickersUtilsProvider>\r\n    );\r\n  }\r\n\r\n  renderTextField() {\r\n    return (\r\n      <TextField\r\n        style={this.props.columnDef.type === 'numeric' ? { float: 'right' } : {}}\r\n        type={this.props.columnDef.type === 'numeric' ? 'number' : 'text'}\r\n        placeholder={this.props.columnDef.title}\r\n        value={this.props.value}\r\n        onChange={event => this.props.onChange(event.target.value)}\r\n        InputProps={{\r\n          style: {\r\n            fontSize: 13,\r\n          }\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderCurrencyField() {\r\n    return \"ok\";\r\n  }\r\n\r\n  render() {\r\n    let component = \"ok\";\r\n\r\n    if (this.props.columnDef.lookup) {\r\n      component = this.renderLookupField();\r\n    }\r\n    else if (this.props.columnDef.type === \"boolean\") {\r\n      component = this.renderBooleanField();\r\n    }\r\n    else if (this.props.columnDef.type === \"date\") {\r\n      component = this.renderDateField();\r\n    }\r\n    else if (this.props.columnDef.type === \"time\") {\r\n      component = this.renderTimeField();\r\n    }\r\n    else if (this.props.columnDef.type === \"datetime\") {\r\n      component = this.renderDateTimeField();\r\n    }\r\n    else if (this.props.columnDef.type === \"currency\") {\r\n      component = this.renderCurrencyField();\r\n    }\r\n    else {\r\n      component = this.renderTextField();\r\n    }\r\n\r\n    return component;\r\n\r\n  }\r\n}\r\n\r\nFormField.propTypes = {\r\n  value: PropTypes.any,\r\n  onChange: PropTypes.func.isRequired,\r\n  columnDef: PropTypes.object.isRequired\r\n};\r\n\r\nexport default FormField;","/* eslint-disable no-unused-vars */\r\nimport { Checkbox, TableCell, TableRow, IconButton, Icon, Tooltip, Typography } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\nimport FormField from './form/form-field';\r\nimport MTableCell from './m-table-cell';\r\n/* eslint-enable no-unused-vars */\r\n\r\n\r\nexport default class MTableEditRow extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      data: props.data ? JSON.parse(JSON.stringify(props.data)) : {}\r\n    };    \r\n  }\r\n\r\n  renderColumns() {\r\n    const mapArr = this.props.columns.filter(columnDef => !columnDef.hidden && !(columnDef.tableData.groupOrder > -1))\r\n      .map((columnDef, index) => {\r\n        const value = this.state.data[columnDef.field];\r\n        const style = {};\r\n        if (index === 0) {\r\n          style.paddingLeft = 24 + this.props.level * 20;\r\n        }\r\n\r\n        if (!columnDef.field || (this.props.mode !== 'add' && columnDef.readonly)) {\r\n          return (\r\n            <this.props.components.Cell\r\n              icons={this.props.icons}\r\n              columnDef={columnDef}\r\n              value={value}\r\n              key={columnDef.tableData.id}\r\n              rowData={this.props.data}\r\n            />\r\n          );\r\n        }\r\n        else {\r\n          return (\r\n            <TableCell\r\n              key={columnDef.tableData.id}\r\n              align={['numeric'].indexOf(columnDef.type) !== -1 ? \"right\" : \"left\"}\r\n            >\r\n              <FormField\r\n                key={columnDef.tableData.id}\r\n                columnDef={columnDef}\r\n                value={value}\r\n                onChange={value => {\r\n                  const data = { ...this.state.data };\r\n                  data[columnDef.field] = value;\r\n                  this.setState({ data });\r\n                }} />\r\n            </TableCell>\r\n          );\r\n        }\r\n      });\r\n    return mapArr;\r\n  }\r\n\r\n  renderActions() {    \r\n    const localization = { ...MTableEditRow.defaultProps.localization, ...this.props.localization };\r\n    const actions = [\r\n      {\r\n        icon: this.props.icons.Check,\r\n        tooltip: localization.saveTooltip,\r\n        onClick: () => {\r\n          const newData = this.state.data;\r\n          delete newData.tableData;\r\n          this.props.onEditingApproved(this.props.mode, this.state.data, this.props.data);\r\n        }\r\n      },\r\n      {\r\n        icon: this.props.icons.Clear,\r\n        tooltip: localization.cancelTooltip,\r\n        onClick: () => {\r\n          this.props.onEditingCanceled(this.props.mode, this.props.data);\r\n        }\r\n      }\r\n    ];\r\n    return (\r\n      <TableCell padding=\"dense\" key=\"key-actions-column\" style={{ width: 48 * actions.length, padding: '0px 5px' }}>\r\n        <div style={{ display: 'flex' }}>\r\n          <this.props.components.Actions data={this.props.data} actions={actions} components={this.props.components} />\r\n        </div>\r\n      </TableCell>\r\n    );\r\n  }\r\n\r\n  getStyle() {\r\n    const style = {\r\n      // boxShadow: '1px 1px 1px 1px rgba(0,0,0,0.2)',\r\n      borderBottom: '1px solid red'\r\n    };\r\n\r\n    return style;\r\n  }\r\n\r\n  render() {\r\n    const localization = { ...MTableEditRow.defaultProps.localization, ...this.props.localization };\r\n\r\n    let columns;\r\n    if (this.props.mode === \"add\" || this.props.mode === \"update\") {\r\n      columns = this.renderColumns();\r\n    }\r\n    else {\r\n      const colSpan = this.props.columns.filter(columnDef => !columnDef.hidden && !(columnDef.tableData.groupOrder > -1)).length;\r\n      columns = [\r\n        <TableCell\r\n          padding={this.props.options.actionsColumnIndex === 0 ? \"none\" : undefined}\r\n          key=\"key-selection-cell\"\r\n          colSpan={colSpan}>\r\n          <Typography variant=\"h6\">\r\n            {localization.deleteText}\r\n          </Typography>\r\n        </TableCell>\r\n      ];\r\n    }\r\n\r\n\r\n    if (this.props.options.selection) {\r\n      columns.splice(0, 0, <TableCell padding=\"none\" key=\"key-selection-cell\" />);\r\n    }\r\n\r\n    if (this.props.options.actionsColumnIndex === -1) {\r\n      columns.push(this.renderActions());\r\n    } else if (this.props.options.actionsColumnIndex >= 0) {\r\n      let endPos = 0;\r\n      if (this.props.options.selection) {\r\n        endPos = 1;\r\n      }\r\n      columns.splice(this.props.options.actionsColumnIndex + endPos, 0, this.renderActions());\r\n    }\r\n\r\n    // Lastly we add detail panel icon\r\n    if (this.props.detailPanel) {\r\n      columns.splice(0, 0, <TableCell padding=\"none\" key=\"key-detail-panel-cell\" />);\r\n    }\r\n\r\n    this.props.columns\r\n      .filter(columnDef => columnDef.tableData.groupOrder > -1)\r\n      .forEach(columnDef => {\r\n        columns.splice(0, 0, <TableCell padding=\"none\" key={\"key-group-cell\" + columnDef.tableData.id} />);\r\n      });\r\n\r\n    const { \r\n      detailPanel, \r\n      isTreeData, \r\n      onRowClick, \r\n      onRowSelected, \r\n      onTreeExpandChanged, \r\n      onToggleDetailPanel, \r\n      onEditingApproved,\r\n      onEditingCanceled,\r\n      ...rowProps \r\n    } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <TableRow\r\n          {...rowProps}\r\n          style={this.getStyle()}\r\n        >\r\n          {columns}\r\n        </TableRow>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nMTableEditRow.defaultProps = {\r\n  actions: [],\r\n  index: 0,\r\n  options: {},\r\n  path: [],\r\n  localization: {\r\n    saveTooltip: 'Save',\r\n    cancelTooltip: 'Cancel',\r\n    deleteText: 'Are you sure delete this row?',\r\n  }\r\n};\r\n\r\nMTableEditRow.propTypes = {\r\n  actions: PropTypes.array,\r\n  icons: PropTypes.any.isRequired,\r\n  index: PropTypes.number.isRequired,\r\n  data: PropTypes.object,\r\n  detailPanel: PropTypes.oneOfType([PropTypes.func, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.object, PropTypes.func]))]),\r\n  options: PropTypes.object.isRequired,\r\n  onRowSelected: PropTypes.func,\r\n  path: PropTypes.arrayOf(PropTypes.number),\r\n  columns: PropTypes.array,\r\n  onRowClick: PropTypes.func,\r\n  onEditingApproved: PropTypes.func,\r\n  onEditingCanceled: PropTypes.func,  \r\n  localization: PropTypes.object\r\n};\r\n","/* eslint-disable no-unused-vars */\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  TableCell, TableRow, TextField,\r\n  FormControl, Select, Input,\r\n  MenuItem, Checkbox, ListItemText,\r\n  InputAdornment, Icon, Tooltip,\r\n} from '@material-ui/core';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { MuiPickersUtilsProvider, TimePicker, DatePicker, DateTimePicker } from 'material-ui-pickers';\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250\r\n    }\r\n  }\r\n};\r\n\r\nclass MTableFilterRow extends React.Component {\r\n  renderLookupFilter = (columnDef) => (\r\n    <FormControl style={{ width: '100%' }}>\r\n      <Select\r\n        multiple\r\n        value={columnDef.tableData.filterValue || []}\r\n        onChange={event => {\r\n          this.props.onFilterChanged(columnDef.tableData.id, event.target.value);\r\n        }}\r\n        input={<Input id=\"select-multiple-checkbox\" />}\r\n        renderValue={selecteds => selecteds.map(selected => columnDef.lookup[selected]).join(', ')}\r\n        MenuProps={MenuProps}\r\n      >\r\n        {\r\n          Object.keys(columnDef.lookup).map(key => (\r\n            <MenuItem key={key} value={key}>\r\n              <Checkbox checked={columnDef.tableData.filterValue ? columnDef.tableData.filterValue.indexOf(key.toString()) > -1 : false} />\r\n              <ListItemText primary={columnDef.lookup[key]} />\r\n            </MenuItem>\r\n          ))\r\n        }\r\n      </Select>\r\n    </FormControl>\r\n  )\r\n\r\n  renderBooleanFilter = (columnDef) => (\r\n    <Checkbox\r\n      indeterminate={columnDef.tableData.filterValue === undefined}\r\n      checked={columnDef.tableData.filterValue === 'checked'}\r\n      onChange={() => {\r\n        let val;\r\n        if (columnDef.tableData.filterValue === undefined) {\r\n          val = 'checked';\r\n        } else if (columnDef.tableData.filterValue === 'checked') {\r\n          val = 'unchecked';\r\n        }\r\n\r\n        this.props.onFilterChanged(columnDef.tableData.id, val);\r\n      }}\r\n    />\r\n  )\r\n\r\n  renderDefaultFilter = (columnDef) => {\r\n    const localization = { ...MTableFilterRow.defaultProps.localization, ...this.props.localization };\r\n    return (\r\n      <TextField\r\n        style={columnDef.type === 'numeric' ? { float: 'right' } : {}}\r\n        type={columnDef.type === 'numeric' ? 'number' : 'text'}\r\n        value={columnDef.tableData.filterValue || ''}\r\n        onChange={(event) => {\r\n          this.props.onFilterChanged(columnDef.tableData.id, event.target.value);\r\n        }}\r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\">\r\n              <Tooltip title={localization.filterTooltip}>\r\n                <this.props.icons.Filter />\r\n              </Tooltip>\r\n            </InputAdornment>\r\n          )\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderDateTypeFilter = (columnDef) => {\r\n    let dateInputElement = null;\r\n    const onDateInputChange = date => this.props.onFilterChanged(columnDef.tableData.id, date);\r\n\r\n    if (columnDef.type === 'date') {\r\n      dateInputElement = (\r\n        <DatePicker\r\n          value={columnDef.tableData.filterValue || null}\r\n          onChange={onDateInputChange}\r\n          clearable\r\n        />\r\n      );\r\n    } else if (columnDef.type === 'datetime') {\r\n      dateInputElement = (\r\n        <DateTimePicker\r\n          value={columnDef.tableData.filterValue || null}\r\n          onChange={onDateInputChange}\r\n          clearable\r\n        />\r\n      );\r\n    } else if (columnDef.type === 'time') {\r\n      dateInputElement = (\r\n        <TimePicker\r\n          value={columnDef.tableData.filterValue || null}\r\n          onChange={onDateInputChange}\r\n          clearable\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n        {dateInputElement}\r\n      </MuiPickersUtilsProvider>\r\n    );\r\n  }\r\n\r\n  getComponentForColumn(columnDef) {\r\n    if (columnDef.filtering === false) {\r\n      return null;\r\n    }\r\n\r\n    if (columnDef.field || columnDef.customFilterAndSearch) {\r\n      if (columnDef.lookup) {\r\n        return this.renderLookupFilter(columnDef);\r\n      } else if (columnDef.type === 'boolean') {\r\n        return this.renderBooleanFilter(columnDef);\r\n      } else if (['date', 'datetime', 'time'].includes(columnDef.type)) {\r\n        return this.renderDateTypeFilter(columnDef);\r\n      } else {\r\n        return this.renderDefaultFilter(columnDef);\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const columns = this.props.columns\r\n      .filter(columnDef => !columnDef.hidden && !(columnDef.tableData.groupOrder > -1))\r\n      .map(columnDef => (\r\n        <TableCell key={columnDef.tableData.id}>\r\n          {this.getComponentForColumn(columnDef)}\r\n        </TableCell>\r\n      ));\r\n\r\n    if (this.props.selection) {\r\n      columns.splice(0, 0, (\r\n        <TableCell padding=\"none\" key=\"key-selection-column\">\r\n          <Checkbox onChange={this.props.onFilterSelectionChanged} />\r\n        </TableCell>)\r\n      );\r\n    }\r\n    if (this.props.emptyCell && this.props.hasActions) {\r\n      if (this.props.actionsColumnIndex === -1) {\r\n        columns.push(<TableCell key=\"key-action-column\" />);\r\n      } else {\r\n        let endPos = 0;\r\n        if (this.props.selection) {\r\n          endPos = 1;\r\n        }\r\n        columns.splice(this.props.actionsColumnIndex + endPos, 0, <TableCell key=\"key-action-column\" />);\r\n      }\r\n    }\r\n\r\n    if (this.props.hasDetailPanel) {\r\n      columns.splice(0, 0, <TableCell padding=\"none\" key=\"key-detail-panel-column\" />);\r\n    }\r\n\r\n    if (this.props.isTreeData > 0) {\r\n      columns.splice(0, 0,\r\n        <TableCell\r\n          padding=\"none\"\r\n          key={\"key-tree-data-filter\"}          \r\n        />\r\n      );\r\n    }\r\n\r\n    this.props.columns\r\n      .filter(columnDef => columnDef.tableData.groupOrder > -1)\r\n      .forEach(columnDef => {\r\n        columns.splice(0, 0, <TableCell padding=\"checkbox\" key={\"key-group-filter\" + columnDef.tableData.id} />);\r\n      });\r\n\r\n    return (\r\n      <TableRow style={{ height: 10 }}>\r\n        {columns}\r\n      </TableRow>\r\n    );\r\n  }\r\n}\r\n\r\nMTableFilterRow.defaultProps = {\r\n  emptyCell: false,\r\n  columns: [],\r\n  selection: false,\r\n  hasActions: false,\r\n  localization: {\r\n    filterTooltip: 'Filter'\r\n  }\r\n};\r\n\r\nMTableFilterRow.propTypes = {\r\n  emptyCell: PropTypes.bool,\r\n  columns: PropTypes.array.isRequired,\r\n  hasDetailPanel: PropTypes.bool.isRequired,\r\n  isTreeData: PropTypes.bool.isRequired,\r\n  onFilterChanged: PropTypes.func.isRequired,\r\n  selection: PropTypes.bool.isRequired,\r\n  onFilterSelectionChanged: PropTypes.func.isRequired,\r\n  actionsColumnIndex: PropTypes.number,\r\n  hasActions: PropTypes.bool,\r\n  localization: PropTypes.object\r\n};\r\n\r\nexport default MTableFilterRow;\r\n","/* eslint-disable no-unused-vars */\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  TableHead, TableRow, TableCell,\r\n  TableSortLabel, Checkbox, withStyles\r\n} from '@material-ui/core';\r\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\r\n/* eslint-enable no-unused-vars */\r\n\r\nexport class MTableHeader extends React.Component {\r\n  renderHeader() {\r\n    const mapArr = this.props.columns.filter(columnDef => !columnDef.hidden && !(columnDef.tableData.groupOrder > -1))\r\n      .map((columnDef, index) => (\r\n        <TableCell\r\n          key={columnDef.tableData.id}\r\n          align={['numeric'].indexOf(columnDef.type) !== -1 ? \"right\" : \"left\"}\r\n          className={this.props.classes.header}\r\n          style={{ ...this.props.headerStyle, ...columnDef.headerStyle }}\r\n        >\r\n          {(columnDef.sort !== false && columnDef.sorting !== false && this.props.sorting)\r\n            ? <TableSortLabel\r\n              active={this.props.orderBy === columnDef.tableData.id}\r\n              direction={this.props.orderDirection || 'asc'}\r\n              onClick={() => {\r\n                const orderDirection = columnDef.tableData.id !== this.props.orderBy ? 'asc' : this.props.orderDirection === 'asc' ? 'desc' : 'asc';\r\n                this.props.onOrderChange(columnDef.tableData.id, orderDirection);\r\n              }}\r\n            >\r\n              {(this.props.grouping && columnDef.field)\r\n                ? <Draggable\r\n                  key={columnDef.tableData.id}\r\n                  draggableId={columnDef.tableData.id.toString()}\r\n                  isDragDisabled={columnDef.grouping === false}\r\n                  index={index}>\r\n                  {(provided, snapshot) => (\r\n                    <div\r\n                      ref={provided.innerRef}\r\n                      {...provided.draggableProps}\r\n                      {...provided.dragHandleProps}\r\n                    // style={this.getItemStyle(snapshot.isDragging, provided.draggableProps.style)}\r\n                    >\r\n                      {columnDef.title}\r\n                    </div>\r\n                  )}\r\n                </Draggable>\r\n                : columnDef.title\r\n              }\r\n            </TableSortLabel>\r\n            : columnDef.title\r\n          }\r\n        </TableCell>\r\n      ));\r\n    return mapArr;\r\n  }\r\n\r\n  renderActionsHeader() {\r\n    const localization = { ...MTableHeader.defaultProps.localization, ...this.props.localization };\r\n    return (\r\n      <TableCell\r\n        key=\"key-actions-column\"\r\n        padding=\"checkbox\"\r\n        className={this.props.classes.header}\r\n        style={{ ...this.props.headerStyle, textAlign: 'center' }}\r\n      >\r\n        <TableSortLabel>{localization.actions}</TableSortLabel>\r\n      </TableCell>\r\n    );\r\n  }\r\n  renderSelectionHeader() {\r\n    return (\r\n      <TableCell\r\n        padding=\"none\"\r\n        key=\"key-selection-column\"\r\n        className={this.props.classes.header}\r\n        style={{ ...this.props.headerStyle }}\r\n      >\r\n        {this.props.showSelectAllCheckbox &&\r\n          <Checkbox\r\n            indeterminate={this.props.selectedCount > 0 && this.props.selectedCount < this.props.dataCount}\r\n            checked={this.props.dataCount > 0 && this.props.selectedCount === this.props.dataCount}\r\n            onChange={(event, checked) => this.props.onAllSelected && this.props.onAllSelected(checked)}\r\n          />\r\n        }\r\n      </TableCell>\r\n    );\r\n  }\r\n  render() {\r\n    const headers = this.renderHeader();\r\n    if (this.props.hasSelection) {\r\n      headers.splice(0, 0, this.renderSelectionHeader());\r\n    }\r\n\r\n    if (this.props.showActionsColumn) {\r\n      if (this.props.actionsHeaderIndex >= 0) {\r\n        let endPos = 0;\r\n        if (this.props.hasSelection) {\r\n          endPos = 1;\r\n        }\r\n        headers.splice(this.props.actionsHeaderIndex + endPos, 0, this.renderActionsHeader());\r\n      } else if (this.props.actionsHeaderIndex === -1) {\r\n        headers.push(this.renderActionsHeader());\r\n      }\r\n    }\r\n\r\n    if (this.props.hasDetailPanel) {\r\n      headers.splice(0, 0,\r\n        <TableCell\r\n          padding=\"none\"\r\n          key=\"key-detail-panel-column\"\r\n          className={this.props.classes.header}\r\n          style={{ ...this.props.headerStyle }}\r\n        />\r\n      );\r\n    }\r\n\r\n    if (this.props.isTreeData > 0) {\r\n      headers.splice(0, 0,\r\n        <TableCell\r\n          padding=\"none\"\r\n          key={\"key-tree-data-header\"}\r\n          className={this.props.classes.header}\r\n          style={{ ...this.props.headerStyle }}\r\n        />\r\n      );\r\n    }\r\n\r\n    this.props.columns\r\n      .filter(columnDef => columnDef.tableData.groupOrder > -1)\r\n      .forEach(columnDef => {\r\n        headers.splice(0, 0, <TableCell padding=\"checkbox\" key={\"key-group-header\" + columnDef.tableData.id} className={this.props.classes.header} />);\r\n      });\r\n\r\n    return (\r\n      <TableHead>\r\n        <TableRow>\r\n          {headers}\r\n        </TableRow>\r\n      </TableHead>\r\n    );\r\n  }\r\n}\r\n\r\nMTableHeader.defaultProps = {\r\n  dataCount: 0,\r\n  hasSelection: false,\r\n  headerStyle: {},\r\n  selectedCount: 0,\r\n  sorting: true,\r\n  localization: {\r\n    actions: 'Actions'\r\n  },\r\n  orderBy: undefined,\r\n  orderDirection: 'asc',\r\n  actionsHeaderIndex: 0\r\n};\r\n\r\nMTableHeader.propTypes = {\r\n  columns: PropTypes.array.isRequired,\r\n  dataCount: PropTypes.number,\r\n  hasDetailPanel: PropTypes.bool.isRequired,\r\n  hasSelection: PropTypes.bool,\r\n  headerStyle: PropTypes.object,\r\n  localization: PropTypes.object,\r\n  selectedCount: PropTypes.number,\r\n  sorting: PropTypes.bool,\r\n  onAllSelected: PropTypes.func,\r\n  onOrderChange: PropTypes.func,\r\n  orderBy: PropTypes.number,\r\n  orderDirection: PropTypes.string,\r\n  actionsHeaderIndex: PropTypes.number,\r\n  showActionsColumn: PropTypes.bool,\r\n  showSelectAllCheckbox: PropTypes.bool,\r\n};\r\n\r\n\r\nexport const styles = theme => ({\r\n  header: {\r\n    position: 'sticky',\r\n    top: 0,\r\n    zIndex: 10,\r\n    backgroundColor: theme.palette.background.paper, // Change according to theme,\r\n  }\r\n});\r\n\r\nexport default withStyles(styles)(MTableHeader);","/* eslint-disable no-unused-vars */\r\nimport { Icon, IconButton, withStyles, Tooltip, Typography } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\n/* eslint-enable no-unused-vars */\r\n\r\nclass MTablePaginationInner extends React.Component {\r\n  handleFirstPageButtonClick = event => {\r\n    this.props.onChangePage(event, 0);\r\n  };\r\n\r\n  handleBackButtonClick = event => {\r\n    this.props.onChangePage(event, this.props.page - 1);\r\n  };\r\n\r\n  handleNextButtonClick = event => {\r\n    this.props.onChangePage(event, this.props.page + 1);\r\n  };\r\n\r\n  handleLastPageButtonClick = event => {\r\n    this.props.onChangePage(event, Math.max(0, Math.ceil(this.props.count / this.props.rowsPerPage) - 1));\r\n  };\r\n\r\n  render() {\r\n    const { classes, count, page, rowsPerPage, theme } = this.props;\r\n\r\n    const localization = { ...MTablePaginationInner.defaultProps.localization, ...this.props.localization };\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <Tooltip title={localization.firstTooltip}>\r\n          <span>\r\n            <IconButton\r\n              onClick={this.handleFirstPageButtonClick}\r\n              disabled={page === 0}\r\n              aria-label={localization.firstAriaLabel}\r\n            >\r\n              { theme.direction === 'rtl' ? <this.props.icons.LastPage /> : <this.props.icons.FirstPage /> }\r\n            </IconButton>\r\n          </span>\r\n        </Tooltip>\r\n        <Tooltip title={localization.previousTooltip}>\r\n          <span>\r\n            <IconButton\r\n              onClick={this.handleBackButtonClick}\r\n              disabled={page === 0}\r\n              aria-label={localization.previousAriaLabel}\r\n            >\r\n              { theme.direction === 'rtl' ? <this.props.icons.NextPage /> : <this.props.icons.PreviousPage /> }\r\n            </IconButton>\r\n          </span>\r\n        </Tooltip>\r\n          <Typography variant=\"caption\" style={{flex: 1, textAlign: 'center', lineHeight: '48px'}}>\r\n            {localization.labelDisplayedRows.replace('{from}', this.props.page * this.props.rowsPerPage + 1).replace('{to}', Math.min((this.props.page + 1) * this.props.rowsPerPage, this.props.count)).replace('{count}', this.props.count)}\r\n          </Typography>\r\n        <Tooltip title={localization.nextTooltip}>\r\n          <span>\r\n            <IconButton\r\n              onClick={this.handleNextButtonClick}\r\n              disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n              aria-label={localization.nextAriaLabel}\r\n            >\r\n              { theme.direction === 'rtl' ? <this.props.icons.PreviousPage /> : <this.props.icons.NextPage /> }\r\n            </IconButton>\r\n          </span>\r\n        </Tooltip>\r\n        <Tooltip title={localization.lastTooltip}>\r\n          <span>\r\n            <IconButton\r\n              onClick={this.handleLastPageButtonClick}\r\n              disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n              aria-label={localization.lastAriaLabel}\r\n            >\r\n              { theme.direction === 'rtl' ? <this.props.icons.FirstPage /> : <this.props.icons.LastPage /> }\r\n            </IconButton>\r\n          </span>\r\n        </Tooltip>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst actionsStyles = theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    display: 'flex',\r\n  }\r\n});\r\n\r\nMTablePaginationInner.propTypes = {\r\n  onChangePage: PropTypes.func,\r\n  page: PropTypes.number,\r\n  count: PropTypes.number,\r\n  rowsPerPage: PropTypes.number,\r\n  classes: PropTypes.object,\r\n  localization: PropTypes.object,\r\n  theme: PropTypes.any\r\n};\r\n\r\nMTablePaginationInner.defaultProps = {\r\n  localization: {\r\n    firstTooltip: 'First Page',\r\n    previousTooltip: 'Previous Page',\r\n    nextTooltip: 'Next Page',\r\n    lastTooltip: 'Last Page',\r\n    labelDisplayedRows: '{from}-{to} of {count}',\r\n    labelRowsPerPage: 'Rows per page:'\r\n  }\r\n};\r\n\r\nconst MTablePagination = withStyles(actionsStyles, { withTheme: true })(MTablePaginationInner);\r\n\r\nexport default MTablePagination;\r\n","/* eslint-disable no-unused-vars */\r\nimport { Icon, IconButton, withStyles, Tooltip, Hidden, Typography } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\n/* eslint-enable no-unused-vars */\r\n\r\nclass MTablePaginationInner extends React.Component {\r\n  handleFirstPageButtonClick = event => {\r\n    this.props.onChangePage(event, 0);\r\n  };\r\n\r\n  handleBackButtonClick = event => {\r\n    this.props.onChangePage(event, this.props.page - 1);\r\n  };\r\n\r\n  handleNextButtonClick = event => {\r\n    this.props.onChangePage(event, this.props.page + 1);\r\n  };\r\n\r\n  handleNumberButtonClick = number => event => {\r\n    this.props.onChangePage(event, number);\r\n  };\r\n\r\n  handleLastPageButtonClick = event => {\r\n    this.props.onChangePage(\r\n      event,\r\n      Math.max(0, Math.ceil(this.props.count / this.props.rowsPerPage) - 1)\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { classes, count, page, rowsPerPage } = this.props;\r\n    \r\n    const localization = { ...MTablePaginationInner.defaultProps.localization, ...this.props.localization };\r\n    const maxPages = Math.ceil(count / rowsPerPage) - 1;\r\n    return (\r\n      <div className={classes.root}>\r\n        <Tooltip title={localization.previousTooltip}>\r\n          <span>\r\n            <IconButton\r\n              onClick={this.handleBackButtonClick}\r\n              disabled={page === 0}\r\n              aria-label={localization.previousAriaLabel}\r\n            >\r\n              <this.props.icons.PreviousPage/>\r\n            </IconButton>\r\n          </span>\r\n        </Tooltip>\r\n        <Hidden smDown={true}>\r\n          <span>\r\n            <IconButton\r\n              onClick={this.handleFirstPageButtonClick}\r\n              aria-label={localization.firstAriaLabel}\r\n            ><Typography variant={page === 0 ? 'h6' : 'body1'}>1</Typography></IconButton></span>\r\n            {page > 2 && <span>..</span>}  \r\n            {page > 1 && <span><IconButton\r\n                onClick={this.handleNumberButtonClick(page-1)}\r\n                aria-label={localization.lastAriaLabel}\r\n              ><Typography variant='body1'>{page}</Typography></IconButton></span>}   \r\n            {page > 0 && page < maxPages &&<span> <IconButton\r\n                onClick={this.handleNumberButtonClick(page)}\r\n                aria-label={localization.lastAriaLabel}\r\n              >\r\n              <Typography variant='h6'>{page + 1}</Typography>\r\n            </IconButton></span>}    \r\n            {page < maxPages -1 && <span><IconButton\r\n                onClick={this.handleNumberButtonClick(page+1)}\r\n                aria-label={localization.lastAriaLabel}\r\n              ><Typography variant='body1'>{page + 2}</Typography></IconButton></span>}  \r\n              {page < maxPages -2 && <span>..</span>}  \r\n            {maxPages > 0 && <span> <IconButton\r\n                onClick={this.handleLastPageButtonClick}\r\n                aria-label={localization.lastAriaLabel}\r\n              >\r\n              <Typography variant={page === maxPages ? 'h6' : 'body1'}>{maxPages + 1}</Typography>\r\n            </IconButton></span>}\r\n        </Hidden>\r\n        <Tooltip title={localization.nextTooltip}>\r\n          <span>\r\n            <IconButton\r\n              onClick={this.handleNextButtonClick}\r\n              disabled={page >= maxPages}\r\n              aria-label={localization.nextAriaLabel}\r\n            >\r\n              <this.props.icons.NextPage/>\r\n            </IconButton>\r\n          </span>\r\n        </Tooltip>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst actionsStyles = theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing.unit * 2.5\r\n  }\r\n});\r\n\r\nMTablePaginationInner.propTypes = {\r\n  onChangePage: PropTypes.func,\r\n  page: PropTypes.number,\r\n  count: PropTypes.number,\r\n  rowsPerPage: PropTypes.number,\r\n  classes: PropTypes.object,\r\n  localization: PropTypes.object\r\n};\r\n\r\nMTablePaginationInner.defaultProps = {\r\n  localization: {\r\n    previousTooltip: 'Previous Page',\r\n    nextTooltip: 'Next Page',\r\n    labelDisplayedRows: '{from}-{to} of {count}',\r\n    labelRowsPerPage: 'Rows per page:'\r\n  }\r\n};\r\n\r\nconst MTablePagination = withStyles(actionsStyles, { withTheme: true })(MTablePaginationInner);\r\n\r\nexport default MTablePagination;\r\n","/* eslint-disable no-unused-vars */\r\nimport { Checkbox, FormControlLabel, Icon, IconButton, InputAdornment, Menu, MenuItem, TextField, Toolbar, Tooltip, Typography, withStyles } from '@material-ui/core';\r\nimport { lighten } from '@material-ui/core/styles/colorManipulator';\r\nimport classNames from 'classnames';\r\nimport { CsvBuilder } from 'filefy';\r\nimport PropTypes, { oneOf } from 'prop-types';\r\nimport * as React from 'react';\r\n/* eslint-enable no-unused-vars */\r\n\r\nexport class MTableToolbar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      columnsButtonAnchorEl: null,\r\n      exportButtonAnchorEl: null\r\n    };\r\n  }\r\n\r\n  defaultExportCsv = () => {\r\n    const columns = this.props.columns\r\n      .filter(columnDef => {\r\n        return !columnDef.hidden && columnDef.field && columnDef.export !== false;\r\n      });\r\n\r\n    const data = this.props.renderData.map(rowData =>\r\n      columns.map(columnDef => {\r\n        return columnDef.lookup\r\n          ? columnDef.lookup[rowData[columnDef.field]]\r\n          : rowData[columnDef.field];\r\n      })\r\n    );\r\n\r\n    const builder = new CsvBuilder((this.props.exportFileName || this.props.title || 'data') + '.csv');\r\n    builder\r\n      .setDelimeter(this.props.exportDelimiter)\r\n      .setColumns(columns.map(columnDef => columnDef.title))\r\n      .addRows(data)\r\n      .exportFile();\r\n  }\r\n\r\n  exportCsv = () => {\r\n    if (this.props.exportCsv) {\r\n      this.props.exportCsv(this.props.columns, this.props.data);\r\n    } else {\r\n      this.defaultExportCsv();\r\n    }\r\n    this.setState({ exportButtonAnchorEl: null });\r\n  }\r\n\r\n  renderSearch() {\r\n    const localization = { ...MTableToolbar.defaultProps.localization, ...this.props.localization };\r\n    if (this.props.search) {\r\n      return (\r\n        <TextField\r\n          className={this.props.searchFieldAlignment === 'left' && this.props.showTitle === false ? null : this.props.classes.searchField}\r\n          value={this.props.searchText}\r\n          onChange={event => this.props.onSearchChanged(event.target.value)}\r\n          color=\"inherit\"\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                <Tooltip title={localization.searchTooltip}>\r\n                  <this.props.icons.Search color=\"inherit\" fontSize=\"small\" />\r\n                </Tooltip>\r\n              </InputAdornment>\r\n            ),\r\n            endAdornment: (\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  disabled={!this.props.searchText}\r\n                  onClick={() => this.props.onSearchChanged(\"\")}\r\n                >\r\n                  <this.props.icons.ResetSearch color=\"inherit\" fontSize=\"small\" />\r\n                </IconButton>\r\n              </InputAdornment>\r\n            ),\r\n            style: this.props.searchFieldStyle\r\n          }}\r\n        />\r\n      );\r\n    }\r\n    else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  renderDefaultActions() {\r\n    const localization = { ...MTableToolbar.defaultProps.localization, ...this.props.localization };\r\n    return (\r\n      <div>\r\n        {this.props.columnsButton &&\r\n          <span>\r\n            <Tooltip title={localization.showColumnsTitle}>\r\n              <IconButton\r\n                color=\"inherit\"\r\n                onClick={event => this.setState({ columnsButtonAnchorEl: event.currentTarget })}\r\n                aria-label={localization.showColumnsAriaLabel}>\r\n\r\n                <this.props.icons.ViewColumn />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Menu\r\n              anchorEl={this.state.columnsButtonAnchorEl}\r\n              open={Boolean(this.state.columnsButtonAnchorEl)}\r\n              onClose={() => this.setState({ columnsButtonAnchorEl: null })}>\r\n              <MenuItem key={\"text\"} disabled style={{ opacity: 1, fontWeight: 600, fontSize: 12 }}>\r\n                {localization.addRemoveColumns}\r\n              </MenuItem>\r\n              {\r\n                this.props.columns.map((col, index) => {\r\n                  return (\r\n                    <MenuItem key={col.tableData.id} disabled={col.removable === false}>\r\n                      <FormControlLabel\r\n                        label={col.title}\r\n                        control={\r\n                          <Checkbox\r\n                            checked={!col.hidden}\r\n                            onChange={(event, checked) => {\r\n                              this.props.onColumnsChanged(col.tableData.id, !checked);\r\n                            }\r\n                            } />\r\n                        }\r\n                      />\r\n                    </MenuItem>\r\n                  );\r\n                })\r\n              }\r\n            </Menu>\r\n          </span>\r\n        }\r\n        {this.props.exportButton &&\r\n          <span>\r\n            <Tooltip title={localization.exportTitle}>\r\n              <IconButton\r\n                color=\"inherit\"\r\n                onClick={event => this.setState({ exportButtonAnchorEl: event.currentTarget })}\r\n                aria-label={localization.exportAriaLabel}>\r\n                <this.props.icons.Export />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Menu\r\n              anchorEl={this.state.exportButtonAnchorEl}\r\n              open={Boolean(this.state.exportButtonAnchorEl)}\r\n              onClose={() => this.setState({ exportButtonAnchorEl: null })}\r\n            >\r\n              <MenuItem key=\"export-csv\" onClick={this.exportCsv}>\r\n                {localization.exportName}\r\n              </MenuItem>\r\n            </Menu>\r\n          </span>\r\n\r\n        }\r\n        <this.props.components.Actions actions={this.props.actions && this.props.actions.filter(a => a.isFreeAction)} components={this.props.components} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderSelectedActions() {\r\n    return (\r\n      <React.Fragment>\r\n        {this.renderSearch()}\r\n        <this.props.components.Actions actions={this.props.actions.filter(a => !a.isFreeAction)} data={this.props.selectedRows} components={this.props.components} />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  renderActions() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <div className={classes.actions}>\r\n        <div>\r\n          {this.props.selectedRows && this.props.selectedRows.length > 0\r\n            ? this.renderSelectedActions()\r\n            : this.renderDefaultActions()\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const localization = { ...MTableToolbar.defaultProps.localization, ...this.props.localization };\r\n    const title = this.props.showTitle ? (this.props.selectedRows && this.props.selectedRows.length > 0 ? localization.nRowsSelected.replace('{0}', this.props.selectedRows.length) : this.props.title) : null;\r\n    return (\r\n      <Toolbar className={classNames(classes.root, { [classes.highlight]: this.props.selectedRows && this.props.selectedRows.length > 0 })}>\r\n        {title && <div className={classes.title}>\r\n          <Typography variant=\"h6\">{title}</Typography>\r\n        </div>}\r\n        {this.props.searchFieldAlignment === 'left' && this.renderSearch()}\r\n        {this.props.toolbarButtonAlignment === 'left' && this.renderActions()}\r\n        <div className={classes.spacer} />\r\n        {this.props.searchFieldAlignment === 'right' && this.renderSearch()}\r\n        {this.props.toolbarButtonAlignment === 'right' && this.renderActions()}\r\n      </Toolbar >\r\n    );\r\n  }\r\n}\r\n\r\nMTableToolbar.defaultProps = {\r\n  actions: [],\r\n  columns: [],\r\n  columnsButton: false,\r\n  localization: {\r\n    addRemoveColumns: 'Add or remove columns',\r\n    nRowsSelected: '{0} row(s) selected',\r\n    showColumnsTitle: 'Show Columns',\r\n    showColumnsAriaLabel: 'Show Columns',\r\n    exportTitle: 'Export',\r\n    exportAriaLabel: 'Export',\r\n    exportName: 'Export as CSV',\r\n    searchTooltip: 'Search'\r\n  },\r\n  search: true,\r\n  showTitle: true,\r\n  toolbarButtonAlignment: 'right',\r\n  searchFieldAlignment: 'right',\r\n  searchText: '',\r\n  selectedRows: [],\r\n  title: 'No Title!'\r\n};\r\n\r\nMTableToolbar.propTypes = {\r\n  actions: PropTypes.array,\r\n  columns: PropTypes.array,\r\n  columnsButton: PropTypes.bool,\r\n  components: PropTypes.object.isRequired,\r\n  localization: PropTypes.object.isRequired,\r\n  onColumnsChanged: PropTypes.func.isRequired,\r\n  onSearchChanged: PropTypes.func.isRequired,\r\n  search: PropTypes.bool.isRequired,\r\n  searchFieldStyle: PropTypes.object,\r\n  searchText: PropTypes.string.isRequired,\r\n  selectedRows: PropTypes.array,\r\n  title: PropTypes.oneOfType([PropTypes.element, PropTypes.string]),\r\n  showTitle: PropTypes.bool.isRequired,\r\n  toolbarButtonAlignment: PropTypes.string.isRequired,\r\n  searchFieldAlignment: PropTypes.string.isRequired,\r\n  renderData: PropTypes.array,\r\n  data: PropTypes.array,\r\n  exportButton: PropTypes.bool,\r\n  exportDelimiter: PropTypes.string,\r\n  exportFileName: PropTypes.string,\r\n  exportCsv: PropTypes.func,\r\n  classes: PropTypes.object\r\n};\r\n\r\nexport const styles = theme => ({\r\n  root: {\r\n    paddingRight: theme.spacing.unit\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n        color: theme.palette.secondary.main,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85)\r\n      }\r\n      : {\r\n        color: theme.palette.text.primary,\r\n        backgroundColor: theme.palette.secondary.dark\r\n      },\r\n  spacer: {\r\n    flex: '1 1 10%'\r\n  },\r\n  actions: {\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  title: {\r\n    flex: '0 0 auto'\r\n  },\r\n  searchField: {\r\n    paddingLeft: theme.spacing.unit * 2\r\n  }\r\n});\r\n\r\nexport default withStyles(styles)(MTableToolbar);\r\n","import formatDate from 'date-fns/format';\r\n\r\nexport default class DataManager {\r\n  applyFilters = false;\r\n  applySearch = false;\r\n  currentPage = 0;\r\n  detailPanelType = 'multiple'\r\n  filterSelectionChecked = false;\r\n  lastDetailPanelRow = undefined;\r\n  lastEditingRow = undefined;\r\n  orderBy = -1;\r\n  orderDirection = '';\r\n  pageSize = 5;\r\n  paging = true;\r\n  parentFunc = null;\r\n  searchText = '';\r\n  selectedCount = 0;\r\n  treefiedDataLength = 0;\r\n  defaultExpanded = false;\r\n\r\n  data = [];\r\n  columns = [];\r\n\r\n  filteredData = [];\r\n  searchedData = [];\r\n  groupedData = [];\r\n  treefiedData = [];\r\n  sortedData = [];\r\n  pagedData = [];\r\n  renderData = [];\r\n\r\n  filtered = false;\r\n  searched = false;\r\n  grouped = false;\r\n  treefied = false;\r\n  sorted = false;\r\n  paged = false;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  setData(data) {\r\n    this.selectedCount = 0;\r\n\r\n    this.data = data.map((row, index) => {\r\n      row.tableData = { ...row.tableData, id: index };\r\n      if (row.tableData.checked) {\r\n        this.selectedCount++;\r\n      }\r\n      return row;\r\n    });\r\n\r\n    this.filtered = false;\r\n  }\r\n\r\n  setColumns(columns) {\r\n    this.columns = columns.map((columnDef, index) => {\r\n      columnDef.tableData = {\r\n        filterValue: columnDef.defaultFilter,\r\n        groupOrder: columnDef.defaultGroupOrder,\r\n        groupSort: columnDef.defaultGroupSort || 'asc',\r\n        ...columnDef.tableData,\r\n        id: index\r\n      };\r\n      return columnDef;\r\n    });\r\n  }\r\n\r\n  setDefaultExpanded(expanded) {\r\n    this.defaultExpanded = expanded;\r\n  }\r\n\r\n  changeApplySearch(applySearch) {\r\n    this.applySearch = applySearch;\r\n    this.searched = false;\r\n  }\r\n\r\n  changeApplyFilters(applyFilters) {\r\n    this.applyFilters = applyFilters;\r\n    this.filtered = false;\r\n  }\r\n\r\n  changePaging(paging) {\r\n    this.paging = paging;\r\n    this.paged = false;\r\n  }\r\n\r\n  changeCurrentPage(currentPage) {\r\n    this.currentPage = currentPage;\r\n    this.paged = false;\r\n  }\r\n\r\n  changePageSize(pageSize) {\r\n    this.pageSize = pageSize;\r\n    this.paged = false;\r\n  }\r\n\r\n  changeParentFunc(parentFunc) {\r\n    this.parentFunc = parentFunc;\r\n  }\r\n\r\n  changeFilterValue(columnId, value) {\r\n    this.columns[columnId].tableData.filterValue = value;\r\n    this.filtered = false;\r\n  }\r\n\r\n  changeFilterSelectionChecked(checked) {\r\n    this.filterSelectionChecked = checked;\r\n    this.filtered = false;\r\n  }\r\n\r\n  changeRowSelected(checked, path) {\r\n    const rowData = this.findDataByPath(this.sortedData, path);\r\n    rowData.tableData.checked = checked;\r\n    this.selectedCount = this.selectedCount + (checked ? 1 : -1);\r\n\r\n    const checkChildRows = rowData => {\r\n      if(rowData.tableData.childRows) {\r\n        rowData.tableData.childRows.forEach(childRow => {\r\n          childRow.tableData.checked = checked;\r\n          this.selectedCount = this.selectedCount + (checked ? 1 : -1);\r\n          checkChildRows(childRow);\r\n        });\r\n      }\r\n    };\r\n\r\n    checkChildRows(rowData);\r\n\r\n    this.filtered = false;\r\n  }\r\n\r\n  changeDetailPanelVisibility(path, render) {\r\n    const rowData = this.findDataByPath(this.sortedData, path);\r\n\r\n    if (rowData.tableData.showDetailPanel === render) {\r\n      rowData.tableData.showDetailPanel = undefined;\r\n    }\r\n    else {\r\n      rowData.tableData.showDetailPanel = render;\r\n    }\r\n\r\n    if (this.detailPanelType === 'single' && this.lastDetailPanelRow && this.lastDetailPanelRow != rowData) {\r\n      this.lastDetailPanelRow.tableData.showDetailPanel = undefined;\r\n    }\r\n\r\n    this.lastDetailPanelRow = rowData;\r\n  }\r\n\r\n  changeGroupExpand(path) {\r\n    const rowData = this.findDataByPath(this.sortedData, path);\r\n    rowData.isExpanded = !rowData.isExpanded;\r\n  }\r\n\r\n  changeSearchText(searchText) {\r\n    this.searchText = searchText;\r\n    this.searched = false;\r\n  }\r\n\r\n  changeRowEditing(rowData, mode) {\r\n    if (rowData) {\r\n      rowData.tableData.editing = mode;\r\n\r\n      if (this.lastEditingRow && this.lastEditingRow != rowData) {\r\n        this.lastEditingRow.tableData.editing = undefined;\r\n      }\r\n\r\n      if (mode) {\r\n        this.lastEditingRow = rowData;\r\n      }\r\n      else {\r\n        this.lastEditingRow = undefined;\r\n      }\r\n    }\r\n    else if (this.lastEditingRow) {\r\n      this.lastEditingRow.tableData.editing = undefined;\r\n      this.lastEditingRow = undefined;\r\n    }\r\n  }\r\n\r\n  changeAllSelected(checked) {\r\n    let selectedCount = 0;\r\n    if (this.isDataType(\"group\")) {\r\n      const setCheck = (data) => {\r\n        data.forEach(element => {\r\n          if (element.groups.length > 0) {\r\n            setCheck(element.groups);\r\n          }\r\n          else {\r\n            element.data.forEach(d => {\r\n              d.tableData.checked = checked;\r\n              selectedCount++;\r\n            });\r\n          }\r\n        });\r\n      };\r\n\r\n      setCheck(this.groupedData);\r\n    }\r\n    else {\r\n      this.searchedData.map(row => {\r\n        row.tableData.checked = checked;\r\n        return row;\r\n      });\r\n      selectedCount = this.searchedData.length;\r\n    }\r\n\r\n    this.selectedCount = checked ? selectedCount : 0;\r\n  }\r\n\r\n  changeOrder(orderBy, orderDirection) {\r\n    this.orderBy = orderBy;\r\n    this.orderDirection = orderDirection;\r\n    this.currentPage = 0;\r\n\r\n    this.sorted = false;\r\n  }\r\n\r\n  changeGroupOrder(columnId) {\r\n    const column = this.columns.find(c => c.tableData.id === columnId);\r\n\r\n    if (column.tableData.groupSort === 'asc') {\r\n      column.tableData.groupSort = 'desc';\r\n    }\r\n    else {\r\n      column.tableData.groupSort = 'asc';\r\n    }\r\n\r\n    this.sorted = false;\r\n  }\r\n\r\n  changeColumnHidden(columnId, hidden) {\r\n    const column = this.columns.find(c => c.tableData.id === columnId);\r\n    column.hidden = hidden;\r\n  }\r\n\r\n  changeTreeExpand(path) {\r\n    const rowData = this.findDataByPath(this.sortedData, path);\r\n    rowData.tableData.isTreeExpanded = !rowData.tableData.isTreeExpanded;\r\n  }\r\n\r\n  changeDetailPanelType(type) {\r\n    this.detailPanelType = type;\r\n  }\r\n\r\n  changeByDrag(result) {\r\n    let start = 0;\r\n\r\n    let groups = this.columns\r\n      .filter(col => col.tableData.groupOrder > -1)\r\n      .sort((col1, col2) => col1.tableData.groupOrder - col2.tableData.groupOrder);\r\n\r\n\r\n    if (result.destination.droppableId === \"groups\" && result.source.droppableId === \"groups\") {\r\n      start = Math.min(result.destination.index, result.source.index);\r\n      const end = Math.max(result.destination.index, result.source.index);\r\n\r\n      groups = groups.slice(start, end + 1);\r\n\r\n      if (result.destination.index < result.source.index) {\r\n        // Take last and add as first\r\n        const last = groups.pop();\r\n        groups.unshift(last);\r\n      }\r\n      else {\r\n        // Take first and add as last\r\n        const last = groups.shift();\r\n        groups.push(last);\r\n      }\r\n    }\r\n    else if (result.destination.droppableId === \"groups\" && result.source.droppableId === \"headers\") {\r\n      const newGroup = this.columns.find(c => c.tableData.id == result.draggableId);\r\n      groups.splice(result.destination.index, 0, newGroup);\r\n    }\r\n    else if (result.destination.droppableId === \"headers\" && result.source.droppableId === \"groups\") {\r\n      const removeGroup = this.columns.find(c => c.tableData.id == result.draggableId);\r\n      removeGroup.tableData.groupOrder = undefined;\r\n      groups.splice(result.source.index, 1);\r\n    }\r\n    else if (result.destination.droppableId === \"headers\" && result.source.droppableId === \"headers\") {\r\n      // Column reordering\r\n    }\r\n    else {\r\n      return;\r\n    }\r\n\r\n    for (let i = 0; i < groups.length; i++) {\r\n      groups[i].tableData.groupOrder = start + i;\r\n    }\r\n\r\n    this.sorted = this.grouped = false;\r\n  }\r\n\r\n  findDataByPath = (renderData, path) => {\r\n    if (this.isDataType(\"tree\")) {\r\n      const node = path.reduce((result, current) => {\r\n        return result.tableData.childRows[current];\r\n      }, { tableData: { childRows: renderData } });\r\n\r\n      return node;\r\n    }\r\n    else {\r\n      const data = { groups: renderData };\r\n\r\n      const node = path.reduce((result, current) => {\r\n        if (result.groups.length > 0) {\r\n          return result.groups[current];\r\n        }\r\n        else if (result.data) {\r\n          return result.data[current];\r\n        }\r\n        else {\r\n          return undefined;\r\n        }\r\n      }, data);\r\n      return node;\r\n    }\r\n  }\r\n\r\n  findGroupByGroupPath(renderData, path) {\r\n    const data = { groups: renderData };\r\n\r\n    const node = path.reduce((result, current) => {\r\n      if (!result) {\r\n        return undefined;\r\n      }\r\n\r\n      const group = result.groups.find(a => a.value === current);\r\n      return group;\r\n    }, data);\r\n    return node;\r\n  }\r\n\r\n  getFieldValue = (rowData, columnDef) => {\r\n    let value = (typeof rowData[columnDef.field] !== 'undefined' ? rowData[columnDef.field] : this.byString(rowData, columnDef.field));\r\n    if (columnDef.lookup) {\r\n      value = columnDef.lookup[value];\r\n    }\r\n\r\n    return value;\r\n  }\r\n\r\n  byString(o, s) {\r\n    if (!s) {\r\n      return;\r\n    }\r\n\r\n    s = s.replace(/\\[(\\w+)\\]/g, '.$1'); // convert indexes to properties\r\n    s = s.replace(/^\\./, '');           // strip a leading dot\r\n    var a = s.split('.');\r\n    for (var i = 0, n = a.length; i < n; ++i) {\r\n      var x = a[i];\r\n      if (o && x in o) {\r\n        o = o[x];\r\n      } else {\r\n        return;\r\n      }\r\n    }\r\n    return o;\r\n  }\r\n\r\n  isDataType(type) {\r\n    let dataType = \"normal\";\r\n\r\n    if (this.parentFunc) {\r\n      dataType = \"tree\";\r\n    }\r\n    else if (this.columns.find(a => a.tableData.groupOrder > -1)) {\r\n      dataType = \"group\";\r\n    }\r\n\r\n    return type === dataType;\r\n  }\r\n\r\n  sort(a, b, type) {\r\n    if (type === 'numeric') {\r\n      return a - b;\r\n    } else {\r\n      return a < b ? -1 : a > b ? 1 : 0;\r\n    }\r\n  }\r\n\r\n  sortList(list) {\r\n    const columnDef = this.columns.find(_ => _.tableData.id === this.orderBy);\r\n    let result = list;\r\n\r\n    if (columnDef.customSort) {\r\n      if (this.orderDirection === 'desc') {\r\n        result = list.sort((a, b) => columnDef.customSort(b, a, 'row'));\r\n      }\r\n      else {\r\n        result = list.sort((a, b) => columnDef.customSort(a, b, 'row'));\r\n      }\r\n    }\r\n    else {\r\n      result = list.sort(\r\n        this.orderDirection === 'desc'\r\n          ? (a, b) => this.sort(this.getFieldValue(b, columnDef), this.getFieldValue(a, columnDef), columnDef.type)\r\n          : (a, b) => this.sort(this.getFieldValue(a, columnDef), this.getFieldValue(b, columnDef), columnDef.type)\r\n      );\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  getRenderState = () => {\r\n    if (this.filtered === false) {\r\n      this.filterData();\r\n    }\r\n\r\n    if (this.searched === false) {\r\n      this.searchData();\r\n    }\r\n\r\n    if (this.grouped === false && this.isDataType(\"group\")) {\r\n      this.groupData();\r\n    }\r\n\r\n    if (this.treefied === false && this.isDataType(\"tree\")) {\r\n      this.treefyData();\r\n    }\r\n\r\n    if (this.sorted === false) {\r\n      this.sortData();\r\n    }\r\n\r\n    if (this.paged === false) {\r\n      this.pageData();\r\n    }\r\n\r\n    return {\r\n      columns: this.columns,\r\n      currentPage: this.currentPage,\r\n      data: this.sortedData,\r\n      lastEditingRow: this.lastEditingRow,\r\n      orderBy: this.orderBy,\r\n      orderDirection: this.orderDirection,\r\n      originalData: this.data,\r\n      pageSize: this.pageSize,\r\n      renderData: this.pagedData,\r\n      searchText: this.searchText,\r\n      selectedCount: this.selectedCount,\r\n      treefiedDataLength: this.treefiedDataLength\r\n    };\r\n  }\r\n\r\n  // =====================================================================================================\r\n  // DATA MANUPULATIONS\r\n  // =====================================================================================================\r\n\r\n  filterData = () => {\r\n    this.searched = this.grouped = this.treefied = this.sorted = this.paged = false;\r\n\r\n    this.filteredData = [...this.data];\r\n\r\n    // if (this.filterSelectionChecked) {\r\n    //   this.filterData = this.filterData.filter(row => {\r\n    //     return row.tableData.checked;\r\n    //   });\r\n    // }\r\n\r\n    if (this.applyFilters) {\r\n      this.columns.filter(columnDef => columnDef.tableData.filterValue).forEach(columnDef => {\r\n        const { lookup, type, tableData, field } = columnDef;\r\n        if (columnDef.customFilterAndSearch) {\r\n          this.filteredData = this.filteredData.filter(row => !!columnDef.customFilterAndSearch(tableData.filterValue, row, columnDef));\r\n        }\r\n        else {\r\n          if (lookup) {\r\n            this.filteredData = this.filteredData.filter(row => {\r\n              return !tableData.filterValue ||\r\n                tableData.filterValue.length === 0 ||\r\n                tableData.filterValue.indexOf(row[field] !== undefined && row[field].toString()) > -1;\r\n            });\r\n          } else if (type === 'numeric') {\r\n            this.filteredData = this.filteredData.filter(row => {\r\n              return (row[field] + \"\") === tableData.filterValue;\r\n            });\r\n          } else if (type === 'boolean' && tableData.filterValue) {\r\n            this.filteredData = this.filteredData.filter(row => {\r\n              return (row[field] && tableData.filterValue === 'checked') ||\r\n                (!row[field] && tableData.filterValue === 'unchecked');\r\n            });\r\n          } else if (['date', 'datetime'].includes(type)) {\r\n            this.filteredData = this.filteredData.filter(row => {\r\n              const currentDate = row[field] ? new Date(row[field]) : null;\r\n\r\n              if (currentDate && currentDate.toString() !== 'Invalid Date') {\r\n                const selectedDate = tableData.filterValue;\r\n                let currentDateToCompare = '';\r\n                let selectedDateToCompare = '';\r\n\r\n                if (type === 'date') {\r\n                  currentDateToCompare = formatDate(currentDate, 'MM/dd/yyyy');\r\n                  selectedDateToCompare = formatDate(selectedDate, 'MM/dd/yyyy');\r\n                } else if (type === 'datetime') {\r\n                  currentDateToCompare = formatDate(currentDate, 'MM/dd/yyyy - HH:mm');\r\n                  selectedDateToCompare = formatDate(selectedDate, 'MM/dd/yyyy - HH:mm');\r\n                }\r\n\r\n                return currentDateToCompare === selectedDateToCompare;\r\n              }\r\n\r\n              return true;\r\n            });\r\n          } else if (type === 'time') {\r\n            this.filteredData = this.filteredData.filter(row => {\r\n              const currentHour = row[field] || null;\r\n\r\n              if (currentHour) {\r\n                const selectedHour = tableData.filterValue;\r\n                const currentHourToCompare = formatDate(selectedHour, 'HH:mm');\r\n\r\n                return currentHour === currentHourToCompare;\r\n              }\r\n\r\n              return true;\r\n            });\r\n          } else {\r\n            this.filteredData = this.filteredData.filter(row => {\r\n              return row[field] && row[field].toString().toUpperCase().includes(tableData.filterValue.toUpperCase());\r\n            });\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    this.filtered = true;\r\n  }\r\n\r\n  searchData = () => {\r\n    this.grouped = this.treefied = this.sorted = this.paged = false;\r\n\r\n    this.searchedData = [...this.filteredData];\r\n\r\n    if (this.searchText && this.applySearch) {\r\n      this.searchedData = this.searchedData.filter(row => {\r\n        return this.columns\r\n          .filter(columnDef => { return columnDef.searchable === undefined ? !columnDef.hidden : columnDef.searchable })\r\n          .some(columnDef => {\r\n            if (columnDef.customFilterAndSearch) {\r\n              return !!columnDef.customFilterAndSearch(this.searchText, row, columnDef);\r\n            }\r\n            else if (columnDef.field) {\r\n              const value = this.getFieldValue(row, columnDef);\r\n              if (value) {\r\n                return value.toString().toUpperCase().includes(this.searchText.toUpperCase());\r\n              }\r\n            }\r\n          });\r\n      });\r\n    }\r\n\r\n    this.searched = true;\r\n  }\r\n\r\n  groupData() {\r\n    this.sorted = this.paged = false;\r\n\r\n    const tmpData = [...this.searchedData];\r\n\r\n    const groups = this.columns\r\n      .filter(col => col.tableData.groupOrder > -1)\r\n      .sort((col1, col2) => col1.tableData.groupOrder - col2.tableData.groupOrder);\r\n\r\n    const subData = tmpData.reduce((result, current) => {\r\n\r\n      let object = result;\r\n      object = groups.reduce((o, colDef) => {\r\n        const value = current[colDef.field] || this.byString(current, colDef.field);\r\n        let group = o.groups.find(g => g.value === value);\r\n        if (!group) {\r\n          const path = [...(o.path || []), value];\r\n          let oldGroup = this.findGroupByGroupPath(this.groupedData, path) || {};\r\n\r\n          group = { value, groups: [], data: [], isExpanded: oldGroup.isExpanded, path: path };\r\n          o.groups.push(group);\r\n        }\r\n        return group;\r\n      }, object);\r\n\r\n      object.data.push(current);\r\n\r\n      return result;\r\n    }, { groups: [] });\r\n\r\n    this.groupedData = subData.groups;\r\n    this.grouped = true;\r\n  }\r\n\r\n  treefyData() {\r\n    this.sorted = this.paged = false;\r\n    this.data.forEach(a => a.tableData.childRows = null);\r\n    this.treefiedData = [];\r\n    this.treefiedDataLength = 0;\r\n\r\n    const addRow = (rowData) => {\r\n      let parent = this.parentFunc(rowData, this.data);\r\n\r\n      if (parent) {\r\n        parent.tableData.childRows = parent.tableData.childRows || [];\r\n        parent.tableData.isTreeExpanded = this.defaultExpanded ? true : false;\r\n        if(!parent.tableData.childRows.includes(rowData)) {\r\n          parent.tableData.childRows.push(rowData);\r\n          this.treefiedDataLength++;\r\n        }\r\n\r\n        addRow(parent);\r\n      }\r\n      else {\r\n        if(!this.treefiedData.includes(rowData)) {\r\n          this.treefiedData.push(rowData);\r\n          this.treefiedDataLength++;\r\n        }\r\n      }\r\n    };\r\n\r\n    this.searchedData.forEach(rowData => {\r\n      addRow(rowData);\r\n    });\r\n\r\n    this.treefied = true;\r\n  }\r\n\r\n  sortData() {\r\n    this.paged = false;\r\n\r\n    if (this.isDataType(\"group\")) {\r\n      this.sortedData = [...this.groupedData];\r\n\r\n      const groups = this.columns\r\n        .filter(col => col.tableData.groupOrder > -1)\r\n        .sort((col1, col2) => col1.tableData.groupOrder - col2.tableData.groupOrder);\r\n\r\n      const sortGroups = (list, columnDef) => {\r\n        if (columnDef.customSort) {\r\n          return list.sort(\r\n            columnDef.tableData.groupSort === 'desc'\r\n              ? (a, b) => columnDef.customSort(b.value, a.value, 'group')\r\n              : (a, b) => columnDef.customSort(a.value, b.value, 'group')\r\n          );\r\n        }\r\n        else {\r\n          return list.sort(\r\n            columnDef.tableData.groupSort === 'desc'\r\n              ? (a, b) => this.sort(b.value, a.value, columnDef.type)\r\n              : (a, b) => this.sort(a.value, b.value, columnDef.type)\r\n          );\r\n        }\r\n      };\r\n\r\n      this.sortedData = sortGroups(this.sortedData, groups[0]);\r\n\r\n      const sortGroupData = (list, level) => {\r\n        list.forEach(element => {\r\n          if (element.groups.length > 0) {\r\n            const column = groups[level];\r\n            element.groups = sortGroups(element.groups, column);\r\n            sortGroupData(element.groups, level + 1);\r\n          }\r\n          else {\r\n            if (this.orderBy >= 0 && this.orderDirection) {\r\n              element.data = this.sortList(element.data);\r\n            }\r\n          }\r\n        });\r\n      };\r\n\r\n      sortGroupData(this.sortedData, 1);\r\n    }\r\n    else if (this.isDataType(\"tree\")) {\r\n      this.sortedData = [...this.treefiedData];\r\n      if (this.orderBy != -1) {\r\n        this.sortedData = this.sortList(this.sortedData);\r\n\r\n        const sortTree = (list) => {\r\n          list.forEach(item => {\r\n            if (item.tableData.childRows) {\r\n              item.tableData.childRows = this.sortList(item.tableData.childRows);\r\n              sortTree(item.tableData.childRows);\r\n            }\r\n          });\r\n        };\r\n\r\n        sortTree(this.sortedData);\r\n      }\r\n    }\r\n    else if (this.isDataType(\"normal\")) {\r\n      this.sortedData = [...this.searchedData];\r\n      if (this.orderBy != -1) {\r\n        this.sortedData = this.sortList(this.sortedData);\r\n      }\r\n    }\r\n\r\n    this.sorted = true;\r\n  }\r\n\r\n  pageData() {\r\n    this.pagedData = [...this.sortedData];\r\n\r\n    if (this.paging) {\r\n      const startIndex = this.currentPage * this.pageSize;\r\n      const endIndex = startIndex + this.pageSize;\r\n\r\n      this.pagedData = this.pagedData.slice(startIndex, endIndex);\r\n    }\r\n\r\n    this.paged = true;\r\n  }\r\n}","/* eslint-disable no-unused-vars */\r\nimport { Icon, Paper, Table, TableFooter, TablePagination, TableRow, CircularProgress, LinearProgress, withStyles } from '@material-ui/core';\r\nimport DoubleScrollbar from \"react-double-scrollbar\";\r\nimport PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\nimport MTableAction from './m-table-action';\r\nimport MTableActions from './m-table-actions';\r\nimport MTableBody from './m-table-body';\r\nimport MTableBodyRow from './m-table-body-row';\r\nimport MTableGroupbar from './m-table-groupbar';\r\nimport MTableGroupRow from './m-table-group-row';\r\nimport MTableCell from './m-table-cell';\r\nimport MTableEditRow from './m-table-edit-row';\r\nimport MTableFilterRow from './m-table-filter-row';\r\nimport MTableHeader from './m-table-header';\r\nimport MTablePagination from './m-table-pagination';\r\nimport MTableSteppedPagination from './m-table-stepped-pagination';\r\nimport MTableToolbar from './m-table-toolbar';\r\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\r\nimport DataManager from './utils/data-manager';\r\nimport { debounce } from 'debounce';\r\n\r\n/* eslint-enable no-unused-vars */\r\n\r\nclass MaterialTable extends React.Component {\r\n  dataManager = new DataManager();\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const calculatedProps = this.getProps(props);\r\n    this.setDataManagerFields(calculatedProps, true);\r\n\r\n    this.state = {\r\n      data: [],\r\n      ...this.dataManager.getRenderState(),\r\n      query: {\r\n        filters: [],\r\n        orderBy: null,\r\n        orderDirection: 'asc',\r\n        page: 0,\r\n        pageSize: calculatedProps.options.pageSize,\r\n        search: '',\r\n\r\n        totalCount: 0\r\n      },\r\n      showAddRow: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState(this.dataManager.getRenderState(), () => {\r\n      if (this.isRemoteData()) {\r\n        this.onQueryChange(this.state.query);\r\n      }\r\n    });\r\n  }\r\n\r\n  setDataManagerFields(props, isInit) {\r\n    let defaultSortColumnIndex = -1;\r\n    let defaultSortDirection = '';\r\n    if (props) {\r\n      defaultSortColumnIndex = props.columns.findIndex(a => a.defaultSort);\r\n      defaultSortDirection = defaultSortColumnIndex > -1 ? props.columns[defaultSortColumnIndex].defaultSort : '';\r\n    }\r\n\r\n    this.dataManager.setColumns(props.columns);\r\n    this.dataManager.setDefaultExpanded(props.options.defaultExpanded);\r\n\r\n    if (this.isRemoteData()) {\r\n      this.dataManager.changeApplySearch(false);\r\n      this.dataManager.changeApplyFilters(false);\r\n    }\r\n    else {\r\n      this.dataManager.changeApplySearch(true);\r\n      this.dataManager.changeApplyFilters(true);\r\n      this.dataManager.setData(props.data);\r\n    }\r\n\r\n    isInit && this.dataManager.changeCurrentPage(props.options.initialPage ? props.options.initialPage : 0);\r\n    isInit && this.dataManager.changePageSize(props.options.pageSize);\r\n    isInit && this.dataManager.changeOrder(defaultSortColumnIndex, defaultSortDirection);\r\n    isInit && this.dataManager.changePaging(props.options.paging);\r\n    isInit && this.dataManager.changeParentFunc(props.parentChildData);\r\n    this.dataManager.changeDetailPanelType(props.options.detailPanelType);\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    const props = this.getProps(nextProps);\r\n    this.setDataManagerFields(props);\r\n    this.setState(this.dataManager.getRenderState());\r\n  }\r\n\r\n  getProps(props) {\r\n    const calculatedProps = { ...(props || this.props) };\r\n\r\n    const localization = calculatedProps.localization.body;\r\n\r\n    calculatedProps.actions = [...(calculatedProps.actions || [])];\r\n    if (calculatedProps.editable) {\r\n      if (calculatedProps.editable.onRowAdd) {\r\n        calculatedProps.actions.push({\r\n          icon: calculatedProps.icons.Add,\r\n          tooltip: localization.addTooltip,\r\n          isFreeAction: true,\r\n          onClick: () => {\r\n            this.dataManager.changeRowEditing();\r\n            this.setState({\r\n              ...this.dataManager.getRenderState(),\r\n              showAddRow: !this.state.showAddRow\r\n            });\r\n          }\r\n        });\r\n      }\r\n      if (calculatedProps.editable.onRowUpdate) {\r\n        calculatedProps.actions.push({\r\n          icon: calculatedProps.icons.Edit,\r\n          tooltip: localization.editTooltip,\r\n          onClick: (e, rowData) => {\r\n            this.dataManager.changeRowEditing(rowData, \"update\");\r\n            this.setState({\r\n              ...this.dataManager.getRenderState(),\r\n              showAddRow: false\r\n            });\r\n          }\r\n        });\r\n      }\r\n      if (calculatedProps.editable.onRowDelete) {\r\n        calculatedProps.actions.push({\r\n          icon: calculatedProps.icons.Delete,\r\n          tooltip: localization.deleteTooltip,\r\n          onClick: (e, rowData) => {\r\n            this.dataManager.changeRowEditing(rowData, \"delete\");\r\n            this.setState({\r\n              ...this.dataManager.getRenderState(),\r\n              showAddRow: false\r\n            });\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    calculatedProps.components = { ...MaterialTable.defaultProps.components, ...calculatedProps.components };\r\n    calculatedProps.icons = { ...MaterialTable.defaultProps.icons, ...calculatedProps.icons };\r\n    calculatedProps.options = { ...MaterialTable.defaultProps.options, ...calculatedProps.options };\r\n\r\n    return calculatedProps;\r\n  }\r\n\r\n  onSelectionChange = () => {\r\n    if (this.props.onSelectionChange) {\r\n      const selectedRows = [];\r\n\r\n      const findSelecteds = list => {\r\n        list.forEach(row => {\r\n          if (row.tableData.checked) {\r\n            selectedRows.push(row);\r\n          }\r\n\r\n          row.tableData.childRows && findSelecteds(row.tableData.childRows);\r\n        });\r\n      };\r\n\r\n      findSelecteds(this.state.data);\r\n      this.props.onSelectionChange(selectedRows);\r\n    }\r\n  }\r\n\r\n  onChangePage = (...args) => {\r\n    this.props.onChangePage && this.props.onChangePage(...args);\r\n  }\r\n\r\n  onChangeRowsPerPage = (...args) => {\r\n    this.props.onChangeRowsPerPage && this.props.onChangeRowsPerPage(...args);\r\n  }\r\n\r\n  onOrderChange = (...args) => {\r\n    this.props.onOrderChange && this.props.onOrderChange(...args);\r\n  }\r\n\r\n  isRemoteData = () => !Array.isArray(this.props.data)\r\n\r\n  onQueryChange = (query) => {\r\n    query = { ...this.state.query, ...query };\r\n\r\n    this.setState({ isLoading: true }, () => {\r\n      this.props.data(query).then((result) => {\r\n        query.totalCount = result.totalCount;\r\n        query.page = result.page;\r\n        this.dataManager.setData(result.data);\r\n        this.setState({\r\n          isLoading: false,\r\n          ...this.dataManager.getRenderState(),\r\n          query\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  onSearchChange = debounce(() => {\r\n    this.dataManager.changeSearchText(this.state.searchText);\r\n\r\n    if (this.isRemoteData()) {\r\n      const query = { ...this.state.query };\r\n      query.page = 0;\r\n      query.search = this.state.searchText;\r\n\r\n      this.onQueryChange(query);\r\n    }\r\n    else {\r\n      this.setState(this.dataManager.getRenderState());\r\n    }\r\n  }, this.props.options.debounceInterval)\r\n\r\n  onFilterChange = debounce(() => {\r\n    if (this.isRemoteData()) {\r\n      const query = { ...this.state.query };\r\n      query.filters = this.state.columns\r\n        .filter(a => a.tableData.filterValue)\r\n        .map(a => ({\r\n          column: a,\r\n          operator: \"=\",\r\n          value: a.tableData.filterValue\r\n        }));\r\n\r\n      this.onQueryChange(query);\r\n    }\r\n    else {\r\n      this.setState(this.dataManager.getRenderState());\r\n    }\r\n  }, this.props.options.debounceInterval)\r\n\r\n  renderFooter() {\r\n    const props = this.getProps();\r\n    if (props.options.paging) {\r\n      const localization = { ...MaterialTable.defaultProps.localization.pagination, ...this.props.localization.pagination };\r\n      return (\r\n        <Table>\r\n          <TableFooter style={{ display: 'grid' }}>\r\n            <TableRow>\r\n              <props.components.Pagination\r\n                classes={{\r\n                  root: props.classes.paginationRoot,\r\n                  toolbar: props.classes.paginationToolbar,\r\n                  caption: props.classes.paginationCaption,\r\n                  selectRoot: props.classes.paginationSelectRoot,\r\n                }}\r\n                style={{ float: props.theme.direction === \"rtl\" ? \"\" : \"right\", overflowX: 'auto' }}\r\n                colSpan={3}\r\n                count={this.isRemoteData() ? this.state.query.totalCount : this.state.data.length}\r\n                icons={props.icons}\r\n                rowsPerPage={this.state.pageSize}\r\n                rowsPerPageOptions={props.options.pageSizeOptions}\r\n                SelectProps={{\r\n                  renderValue: value => <div style={{ padding: '0px 5px' }}>{value + ' ' + localization.labelRowsSelect + ' '}</div>\r\n                }}\r\n                page={this.isRemoteData() ? this.state.query.page : this.state.currentPage}\r\n                onChangePage={(event, page) => {\r\n                  if (this.isRemoteData()) {\r\n                    const query = { ...this.state.query };\r\n                    query.page = page;\r\n                    this.onQueryChange(query);\r\n                  }\r\n                  else {\r\n                    this.dataManager.changeCurrentPage(page);\r\n                    this.setState(this.dataManager.getRenderState(), () => {\r\n                      this.onChangePage(page);\r\n                    });\r\n                  }\r\n                }}\r\n                onChangeRowsPerPage={(event) => {\r\n                  this.dataManager.changePageSize(event.target.value);\r\n\r\n                  if (this.isRemoteData()) {\r\n                    const query = { ...this.state.query };\r\n                    query.pageSize = event.target.value;\r\n                    query.page = 0;\r\n                    this.onQueryChange(query);\r\n                  }\r\n                  else {\r\n                    this.dataManager.changeCurrentPage(0);\r\n                    this.setState(this.dataManager.getRenderState(), () => {\r\n                      this.onChangeRowsPerPage(event.target.value);\r\n                    });\r\n                  }\r\n                }}\r\n                ActionsComponent={(subProps) => props.options.paginationType === 'normal' ?\r\n                  <MTablePagination {...subProps} icons={props.icons} localization={localization} /> :\r\n                  <MTableSteppedPagination {...subProps} icons={props.icons} localization={localization} />}\r\n                labelDisplayedRows={(row) => localization.labelDisplayedRows.replace('{from}', row.from).replace('{to}', row.to).replace('{count}', row.count)}\r\n                labelRowsPerPage={localization.labelRowsPerPage}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const props = this.getProps();\r\n\r\n    return (\r\n      <DragDropContext onDragEnd={result => {\r\n        this.dataManager.changeByDrag(result);\r\n        this.setState(this.dataManager.getRenderState());\r\n      }}>\r\n        <props.components.Container style={{ position: 'relative' }}>\r\n          {props.options.toolbar &&\r\n            <props.components.Toolbar\r\n              actions={props.actions}\r\n              components={props.components}\r\n              selectedRows={this.state.selectedCount > 0 ? this.state.originalData.filter(a => { return a.tableData.checked }) : []}\r\n              columns={this.state.columns}\r\n              columnsButton={props.options.columnsButton}\r\n              icons={props.icons}\r\n              exportButton={props.options.exportButton}\r\n              exportDelimiter={props.options.exportDelimiter}\r\n              exportFileName={props.options.exportFileName}\r\n              exportCsv={props.options.exportCsv}\r\n              data={this.state.data}\r\n              renderData={this.state.renderData}\r\n              search={props.options.search}\r\n              showTitle={props.options.showTitle}\r\n              toolbarButtonAlignment={props.options.toolbarButtonAlignment}\r\n              searchFieldAlignment={props.options.searchFieldAlignment}\r\n              searchText={this.state.searchText}\r\n              searchFieldStyle={props.options.searchFieldStyle}\r\n              title={props.title}\r\n              onSearchChanged={searchText => this.setState({ searchText }, this.onSearchChange)}\r\n              onColumnsChanged={(columnId, hidden) => {\r\n                this.dataManager.changeColumnHidden(columnId, hidden);\r\n                this.setState(this.dataManager.getRenderState());\r\n              }}\r\n              localization={{ ...MaterialTable.defaultProps.localization.toolbar, ...this.props.localization.toolbar }}\r\n            />\r\n          }\r\n          {props.options.grouping &&\r\n            <props.components.Groupbar\r\n              icons={props.icons}\r\n              localization={{ ...MaterialTable.defaultProps.localization.grouping, ...props.localization.grouping }}\r\n              groupColumns={this.state.columns\r\n                .filter(col => col.tableData.groupOrder > -1)\r\n                .sort((col1, col2) => col1.tableData.groupOrder - col2.tableData.groupOrder)\r\n              }\r\n              onSortChanged={(groupedColumn) => {\r\n                this.dataManager.changeGroupOrder(groupedColumn.tableData.id);\r\n                this.setState(this.dataManager.getRenderState());\r\n              }}\r\n              onGroupRemoved={(groupedColumn, index) => {\r\n                const result = {\r\n                  combine: null,\r\n                  destination: { droppableId: \"headers\", index: 0 },\r\n                  draggableId: groupedColumn.tableData.id,\r\n                  mode: \"FLUID\",\r\n                  reason: \"DROP\",\r\n                  source: { index, droppableId: \"groups\" },\r\n                  type: \"DEFAULT\"\r\n                };\r\n                this.dataManager.changeByDrag(result);\r\n                this.setState(this.dataManager.getRenderState());\r\n              }}\r\n            />\r\n          }\r\n          <ScrollBar double={props.options.doubleHorizontalScroll}>\r\n            <Droppable droppableId=\"headers\" direction=\"horizontal\">\r\n              {(provided, snapshot) => (\r\n                <div\r\n                  ref={provided.innerRef}\r\n                //style={this.getListStyle(snapshot.isDraggingOver)}\r\n                >\r\n                  <div style={{ maxHeight: props.options.maxBodyHeight, overflowY: 'auto' }}>\r\n                    <Table>\r\n                      {props.options.header &&\r\n                        <props.components.Header\r\n                          localization={{ ...MaterialTable.defaultProps.localization.header, ...this.props.localization.header }}\r\n                          columns={this.state.columns}\r\n                          hasSelection={props.options.selection}\r\n                          headerStyle={props.options.headerStyle}\r\n                          selectedCount={this.state.selectedCount}\r\n                          dataCount={props.parentChildData ? this.state.treefiedDataLength : this.state.data.length}\r\n                          hasDetailPanel={!!props.detailPanel}\r\n                          showActionsColumn={props.actions && props.actions.filter(a => !a.isFreeAction && !this.props.options.selection).length > 0}\r\n                          showSelectAllCheckbox={props.options.showSelectAllCheckbox}\r\n                          orderBy={this.state.orderBy}\r\n                          orderDirection={this.state.orderDirection}\r\n                          onAllSelected={(checked) => {\r\n                            this.dataManager.changeAllSelected(checked);\r\n                            this.setState(this.dataManager.getRenderState(), () => this.onSelectionChange());\r\n                          }}\r\n                          onOrderChange={(orderBy, orderDirection) => {\r\n                            this.dataManager.changeOrder(orderBy, orderDirection);\r\n\r\n                            if (this.isRemoteData()) {\r\n                              const query = { ...this.state.query };\r\n                              query.page = 0;\r\n                              query.orderBy = this.state.columns.find(a => a.tableData.id === orderBy);\r\n                              query.orderDirection = orderDirection;\r\n                              this.onQueryChange(query);\r\n                            }\r\n                            else {\r\n                              this.setState(this.dataManager.getRenderState(), () => {\r\n                                this.onOrderChange(orderBy, orderDirection);\r\n                              });\r\n                            }\r\n                          }}\r\n                          actionsHeaderIndex={props.options.actionsColumnIndex}\r\n                          sorting={props.options.sorting}\r\n                          grouping={props.options.grouping}\r\n                          isTreeData={this.props.parentChildData !== undefined}\r\n                        />\r\n                      }\r\n\r\n\r\n                      <props.components.Body\r\n                        actions={props.actions}\r\n                        components={props.components}\r\n                        icons={props.icons}\r\n                        renderData={this.state.renderData}\r\n                        currentPage={this.state.currentPage}\r\n                        pageSize={this.state.pageSize}\r\n                        columns={this.state.columns}\r\n                        detailPanel={props.detailPanel}\r\n                        options={props.options}\r\n                        getFieldValue={this.dataManager.getFieldValue}\r\n                        isTreeData={this.props.parentChildData !== undefined}\r\n                        onFilterChanged={(columnId, value) => {\r\n                          this.dataManager.changeFilterValue(columnId, value);\r\n                          this.setState({}, () => this.onFilterChange());\r\n                        }}\r\n                        onFilterSelectionChanged={(event) => {\r\n                          this.dataManager.changeFilterSelectionChecked(event.target.checked);\r\n                          this.setState(this.dataManager.getRenderState());\r\n                        }}\r\n                        onRowSelected={(event, path) => {\r\n                          this.dataManager.changeRowSelected(event.target.checked, path);\r\n                          this.setState(this.dataManager.getRenderState(), () => this.onSelectionChange());\r\n                        }}\r\n                        onToggleDetailPanel={(path, render) => {\r\n                          this.dataManager.changeDetailPanelVisibility(path, render);\r\n                          this.setState(this.dataManager.getRenderState());\r\n                        }}\r\n                        onGroupExpandChanged={(path) => {\r\n                          this.dataManager.changeGroupExpand(path);\r\n                          this.setState(this.dataManager.getRenderState());\r\n                        }}\r\n                        onTreeExpandChanged={(path) => {\r\n                          this.dataManager.changeTreeExpand(path);\r\n                          this.setState(this.dataManager.getRenderState());\r\n                        }}\r\n                        onEditingCanceled={(mode, rowData) => {\r\n                          if (mode === \"add\") {\r\n                            this.setState({ showAddRow: false });\r\n                          }\r\n                          else if (mode === \"update\" || mode === \"delete\") {\r\n                            this.dataManager.changeRowEditing(rowData);\r\n                            this.setState(this.dataManager.getRenderState());\r\n                          }\r\n                        }}\r\n                        onEditingApproved={(mode, newData, oldData) => {\r\n                          if (mode === \"add\") {\r\n                            this.setState({ isLoading: true }, () => {\r\n                              this.props.editable.onRowAdd(newData)\r\n                                .then(result => {\r\n                                  this.setState({ isLoading: false, showAddRow: false }, () => {\r\n                                    if (this.isRemoteData()) {\r\n                                      this.onQueryChange(this.state.query);\r\n                                    }\r\n                                  });\r\n                                })\r\n                                .catch(reason => {\r\n                                  this.setState({ isLoading: false });\r\n                                });\r\n                            });\r\n                          }\r\n                          else if (mode === \"update\") {\r\n                            this.setState({ isLoading: true }, () => {\r\n                              this.props.editable.onRowUpdate(newData, oldData)\r\n                                .then(result => {\r\n                                  this.dataManager.changeRowEditing(oldData);\r\n                                  this.setState({\r\n                                    isLoading: false,\r\n                                    ...this.dataManager.getRenderState()\r\n                                  }, () => {\r\n                                    if (this.isRemoteData()) {\r\n                                      this.onQueryChange(this.state.query);\r\n                                    }\r\n                                  });\r\n                                })\r\n                                .catch(reason => {\r\n                                  this.setState({ isLoading: false });\r\n                                });\r\n                            });\r\n\r\n                          }\r\n                          else if (mode === \"delete\") {\r\n                            this.setState({ isLoading: true }, () => {\r\n                              this.props.editable.onRowDelete(oldData)\r\n                                .then(result => {\r\n                                  this.dataManager.changeRowEditing(oldData);\r\n                                  this.setState({\r\n                                    isLoading: false,\r\n                                    ...this.dataManager.getRenderState()\r\n                                  }, () => {\r\n                                    if (this.isRemoteData()) {\r\n                                      this.onQueryChange(this.state.query);\r\n                                    }\r\n                                  });\r\n                                })\r\n                                .catch(reason => {\r\n                                  this.setState({ isLoading: false });\r\n                                });\r\n                            });\r\n                          }\r\n                        }}\r\n                        localization={{ ...MaterialTable.defaultProps.localization.body, ...this.props.localization.body }}\r\n                        onRowClick={this.props.onRowClick}\r\n                        showAddRow={this.state.showAddRow}\r\n                        hasAnyEditingRow={!!(this.state.lastEditingRow || this.state.showAddRow)}\r\n                        hasDetailPanel={!!props.detailPanel}\r\n                      />\r\n                    </Table>\r\n                  </div>\r\n                  {provided.placeholder}\r\n                </div>\r\n              )}\r\n            </Droppable>\r\n\r\n          </ScrollBar>\r\n          {(this.state.isLoading || props.isLoading) && props.options.loadingType === \"linear\" &&\r\n            <div style={{ position: 'relative', width: '100%' }}>\r\n              <div style={{ position: 'absolute', top: 0, left: 0, height: '100%', width: '100%' }}>\r\n                <LinearProgress />\r\n              </div>\r\n            </div>\r\n          }\r\n          {this.renderFooter()}\r\n\r\n          {(this.state.isLoading || props.isLoading) && props.options.loadingType === 'overlay' &&\r\n            <div style={{ position: 'absolute', top: 0, left: 0, height: '100%', width: '100%' }}>\r\n              <div style={{ display: 'table', width: '100%', height: '100%', backgroundColor: '#FFFFFFAA' }}>\r\n                <div style={{ display: 'table-cell', width: '100%', height: '100%', verticalAlign: 'middle', textAlign: 'center' }}>\r\n                  <CircularProgress />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          }\r\n        </props.components.Container>\r\n      </DragDropContext>\r\n    );\r\n  }\r\n}\r\n\r\nconst ScrollBar = ({ double, children }) => {\r\n  if (double) {\r\n    return (\r\n      <DoubleScrollbar>\r\n        {children}\r\n      </DoubleScrollbar>\r\n    );\r\n  }\r\n  else {\r\n    return (\r\n      <div style={{ overflowX: 'auto' }}>\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nMaterialTable.defaultProps = {\r\n  actions: [],\r\n  classes: {},\r\n  columns: [],\r\n  components: {\r\n    Action: MTableAction,\r\n    Actions: MTableActions,\r\n    Body: MTableBody,\r\n    Cell: MTableCell,\r\n    Container: Paper,\r\n    EditRow: MTableEditRow,\r\n    FilterRow: MTableFilterRow,\r\n    Groupbar: MTableGroupbar,\r\n    GroupRow: MTableGroupRow,\r\n    Header: MTableHeader,\r\n    Pagination: TablePagination,\r\n    Row: MTableBodyRow,\r\n    Toolbar: MTableToolbar,\r\n  },\r\n  data: [],\r\n  icons: {\r\n    /* eslint-disable react/display-name */\r\n    Add: (props) => <Icon {...props}>add_box</Icon>,\r\n    Check: (props) => <Icon {...props}>check</Icon>,\r\n    Clear: (props) => <Icon {...props}>clear</Icon>,\r\n    Delete: (props) => <Icon {...props}>delete_outline</Icon>,\r\n    DetailPanel: (props) => <Icon {...props}>chevron_right</Icon>,\r\n    Edit: (props) => <Icon {...props}>edit</Icon>,\r\n    Export: (props) => <Icon {...props}>save_alt</Icon>,\r\n    Filter: (props) => <Icon {...props}>filter_list</Icon>,\r\n    FirstPage: (props) => <Icon {...props}>first_page</Icon>,\r\n    LastPage: (props) => <Icon {...props}>last_page</Icon>,\r\n    NextPage: (props) => <Icon {...props}>chevron_right</Icon>,\r\n    PreviousPage: (props) => <Icon {...props}>chevron_left</Icon>,\r\n    ResetSearch: (props) => <Icon {...props}>clear</Icon>,\r\n    Search: (props) => <Icon {...props}>search</Icon>,\r\n    SortArrow: (props) => <Icon {...props}>arrow_upward</Icon>,\r\n    ThirdStateCheck: (props) => <Icon {...props}>remove</Icon>,\r\n    ViewColumn: (props) => <Icon {...props}>view_column</Icon>\r\n    /* eslint-enable react/display-name */\r\n  },\r\n  isLoading: false,\r\n  title: 'Table Title',\r\n  options: {\r\n    actionsColumnIndex: 0,\r\n    columnsButton: false,\r\n    detailPanelType: 'multiple',\r\n    debounceInterval: 200,\r\n    doubleHorizontalScroll: false,\r\n    emptyRowsWhenPaging: true,\r\n    exportButton: false,\r\n    exportDelimiter: ',',\r\n    filtering: false,\r\n    header: true,\r\n    loadingType: 'overlay',\r\n    paging: true,\r\n    pageSize: 5,\r\n    pageSizeOptions: [5, 10, 20],\r\n    paginationType: 'normal',\r\n    showEmptyDataSourceMessage: true,\r\n    showSelectAllCheckbox: true,\r\n    search: true,\r\n    showTitle: true,\r\n    toolbarButtonAlignment: 'right',\r\n    searchFieldAlignment: 'right',\r\n    searchFieldStyle: {},\r\n    selection: false,\r\n    sorting: true,\r\n    toolbar: true,\r\n    defaultExpanded: false\r\n  },\r\n  localization: {\r\n    grouping: {\r\n      groupedBy: 'Grouped By:',\r\n      placeholder: 'Drag headers here to group by',\r\n    },\r\n    pagination: {\r\n      labelDisplayedRows: '{from}-{to} of {count}',\r\n      labelRowsPerPage: 'Rows per page:',\r\n      labelRowsSelect: 'rows'\r\n    },\r\n    toolbar: {},\r\n    header: {},\r\n    body: {\r\n      filterRow: {},\r\n      editRow: {\r\n        saveTooltip: 'Save',\r\n        cancelTooltip: 'Cancel',\r\n        deleteText: 'Are you sure delete this row?',\r\n      },\r\n      addTooltip: 'Add',\r\n      deleteTooltip: 'Delete',\r\n      editTooltip: 'Edit'\r\n    }\r\n  }\r\n};\r\n\r\nMaterialTable.propTypes = {\r\n  actions: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\r\n    icon: PropTypes.oneOfType([PropTypes.element, PropTypes.func, PropTypes.string]).isRequired,\r\n    isFreeAction: PropTypes.bool,\r\n    tooltip: PropTypes.string,\r\n    onClick: PropTypes.func.isRequired,\r\n    iconProps: PropTypes.object\r\n  })])),\r\n  columns: PropTypes.arrayOf(PropTypes.shape({\r\n    cellStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\r\n    currencySetting: PropTypes.shape({\r\n      locale: PropTypes.string,\r\n      currencyCode: PropTypes.string,\r\n      minimumFractionDigits: PropTypes.number,\r\n      maximumFractionDigits: PropTypes.number\r\n    }),\r\n    customFilterAndSearch: PropTypes.func,\r\n    customSort: PropTypes.func,\r\n    defaultFilter: PropTypes.any,\r\n    defaultSort: PropTypes.oneOf(['asc', 'desc']),\r\n    grouping: PropTypes.bool,\r\n    emptyValue: PropTypes.oneOfType([PropTypes.string, PropTypes.node, PropTypes.func]),\r\n    export: PropTypes.bool,\r\n    field: PropTypes.string,\r\n    filtering: PropTypes.bool,\r\n    headerStyle: PropTypes.object,\r\n    hidden: PropTypes.bool,\r\n    lookup: PropTypes.object,\r\n    readonly: PropTypes.bool,\r\n    removable: PropTypes.bool,\r\n    render: PropTypes.func,\r\n    searchable: PropTypes.bool,\r\n    sorting: PropTypes.bool,\r\n    title: PropTypes.string,\r\n    type: PropTypes.oneOf(['string', 'boolean', 'numeric', 'date', 'datetime', 'time', 'currency'])\r\n  })).isRequired,\r\n  components: PropTypes.shape({\r\n    Action: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    Actions: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    Body: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    Cell: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    Container: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    EditRow: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    FilterRow: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    Groupbar: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    GroupRow: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    Header: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    Pagination: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    Row: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    Toolbar: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n  }),\r\n  data: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.object), PropTypes.func]).isRequired,\r\n  editable: PropTypes.shape({\r\n    onRowAdd: PropTypes.func,\r\n    onRowUpdate: PropTypes.func,\r\n    onRowDelete: PropTypes.func\r\n  }),\r\n  detailPanel: PropTypes.oneOfType([\r\n    PropTypes.func,\r\n    PropTypes.arrayOf(PropTypes.oneOfType([\r\n      PropTypes.func,\r\n      PropTypes.shape({\r\n        disabled: PropTypes.bool,\r\n        icon: PropTypes.oneOfType([PropTypes.element, PropTypes.func, PropTypes.string]),\r\n        openIcon: PropTypes.oneOfType([PropTypes.element, PropTypes.func, PropTypes.string]),\r\n        tooltip: PropTypes.string,\r\n        render: PropTypes.func.isRequired\r\n      })\r\n    ]))\r\n  ]),\r\n  icons: PropTypes.shape({\r\n    Add: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    Check: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    Clear: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    Delete: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    DetailPanel: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    Edit: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    Export: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    Filter: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    FirstPage: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    LastPage: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    NextPage: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    PreviousPage: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    ResetSearch: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    Search: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    SortArrow: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    ThirdStateCheck: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    ViewColumn: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n  }),\r\n  isLoading: PropTypes.bool,\r\n  title: PropTypes.oneOfType([PropTypes.element, PropTypes.string]),\r\n  options: PropTypes.shape({\r\n    actionsColumnIndex: PropTypes.number,\r\n    columnsButton: PropTypes.bool,\r\n    defaultExpanded: PropTypes.bool,\r\n    debounceInterval: PropTypes.number,\r\n    detailPanelType: PropTypes.oneOf(['single', 'multiple']),\r\n    doubleHorizontalScroll: PropTypes.bool,\r\n    emptyRowsWhenPaging: PropTypes.bool,\r\n    exportButton: PropTypes.bool,\r\n    exportDelimiter: PropTypes.string,\r\n    exportFileName: PropTypes.string,\r\n    exportCsv: PropTypes.func,\r\n    filtering: PropTypes.bool,\r\n    header: PropTypes.bool,\r\n    headerStyle: PropTypes.object,\r\n    initialPage: PropTypes.number,\r\n    maxBodyHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n    loadingType: PropTypes.oneOf(['overlay', 'linear']),\r\n    paging: PropTypes.bool,\r\n    pageSize: PropTypes.number,\r\n    pageSizeOptions: PropTypes.arrayOf(PropTypes.number),\r\n    paginationType: PropTypes.oneOf(['normal', 'stepped']),\r\n    rowStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\r\n    showEmptyDataSourceMessage: PropTypes.bool,\r\n    showSelectAllCheckbox: PropTypes.bool,\r\n    search: PropTypes.bool,\r\n    showTitle: PropTypes.bool,\r\n    toolbarButtonAlignment: PropTypes.oneOf(['left', 'right']),\r\n    searchFieldAlignment: PropTypes.oneOf(['left', 'right']),\r\n    searchFieldStyle: PropTypes.object,\r\n    selection: PropTypes.bool,\r\n    sorting: PropTypes.bool,\r\n    toolbar: PropTypes.bool,\r\n  }),\r\n  localization: PropTypes.shape({\r\n    grouping: PropTypes.shape({\r\n      groupedBy: PropTypes.string,\r\n      placeholder: PropTypes.string\r\n    }),\r\n    pagination: PropTypes.object,\r\n    toolbar: PropTypes.object,\r\n    header: PropTypes.object,\r\n    body: PropTypes.object\r\n  }),\r\n  onSelectionChange: PropTypes.func,\r\n  onChangeRowsPerPage: PropTypes.func,\r\n  onChangePage: PropTypes.func,\r\n  onOrderChange: PropTypes.func,\r\n  onRowClick: PropTypes.func,\r\n  tableRef: PropTypes.any\r\n};\r\n\r\n\r\nconst styles = theme => ({\r\n  paginationRoot: {\r\n    width: '100%'\r\n  },\r\n  paginationToolbar: {\r\n    padding: 0,\r\n    width: '100%'\r\n  },\r\n  paginationCaption: {\r\n    display: 'none'\r\n  },\r\n  paginationSelectRoot: {\r\n    margin: 0\r\n  }\r\n});\r\n\r\n\r\n\r\nexport default withStyles(styles, { withTheme: true })(props => <MaterialTable {...props} ref={props.tableRef} />);\r\n\r\nexport {\r\n  MTableAction, MTableActions, MTableBody, MTableCell, MTableEditRow,\r\n  MTableFilterRow, MTableHeader, MTableSteppedPagination, MTablePagination,\r\n  MTableBodyRow, MTableToolbar, MTableGroupRow\r\n};\r\n"],"sourceRoot":""}